{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Temproom.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\nimport Peer from \"peerjs\"; // const Container = styled.div`\n//   padding: 20px;\n//   display: flex;\n//   height: 100vh;\n//   width: 90%;\n//   margin: auto;\n//   flex-wrap: wrap;\n// `;\n// const StyledVideo = styled.video`\n//   height: 40%;\n//   width: 50%;\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Video;\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = () => {\n  _s2();\n\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.id;\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      muted: true,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), peers.map((peer, index) => {\n      return /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Room, \"CnCiOWEqFkEX/I5xE9Iw8SwijJY=\");\n\n_c2 = Room;\nexport default _c3 = withRouter(Room);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"Room\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Temproom.js"],"names":["React","useEffect","useRef","useState","io","withRouter","Peer","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","id","connect","navigator","mediaDevices","getUserMedia","video","audio","then","emit","users","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Peer from \"peerjs\";\r\n\r\n// const Container = styled.div`\r\n//   padding: 20px;\r\n//   display: flex;\r\n//   height: 100vh;\r\n//   width: 90%;\r\n//   margin: auto;\r\n//   flex-wrap: wrap;\r\n// `;\r\n\r\n// const StyledVideo = styled.video`\r\n//   height: 40%;\r\n//   width: 50%;\r\n// `;\r\n\r\nconst Video = (props) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    props.peer.on(\"stream\", (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n\r\n  return <video playsInline autoPlay ref={ref} />;\r\n};\r\n\r\nconst videoConstraints = {\r\n  height: window.innerHeight / 2,\r\n  width: window.innerWidth / 2,\r\n};\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const socketRef = useRef();\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const roomID = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"/\");\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: videoConstraints, audio: true })\r\n      .then((stream) => {\r\n        userVideo.current.srcObject = stream;\r\n        socketRef.current.emit(\"join room\", roomID);\r\n        socketRef.current.on(\"all users\", (users) => {\r\n          const peers = [];\r\n          users.forEach((userID) => {\r\n            const peer = createPeer(userID, socketRef.current.id, stream);\r\n            peersRef.current.push({\r\n              peerID: userID,\r\n              peer,\r\n            });\r\n            peers.push(peer);\r\n          });\r\n          setPeers(peers);\r\n        });\r\n\r\n        socketRef.current.on(\"user joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.callerID, stream);\r\n          peersRef.current.push({\r\n            peerID: payload.callerID,\r\n            peer,\r\n          });\r\n\r\n          setPeers((users) => [...users, peer]);\r\n        });\r\n\r\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          item.peer.signal(payload.signal);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <video muted ref={userVideo} autoPlay playsInline />\r\n      {peers.map((peer, index) => {\r\n        return <Video key={index} peer={peer} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Room);\r\n"]},"metadata":{},"sourceType":"module"}