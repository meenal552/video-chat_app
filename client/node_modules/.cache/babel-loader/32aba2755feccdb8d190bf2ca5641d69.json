{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Commonroom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Commonroom = props => {\n  _s();\n\n  const [connection, setconnection] = useState(null);\n  const [localVideoStream, setstream] = useState(null);\n  useEffect(() => {\n    console.log(\"notsocket \");\n\n    if (props.newsocket) {\n      props.newsocket.on(\"play-video\", data => {\n        if (props.myPeer.id === data.peerid) {\n          data.peers.forEach(peer => {\n            if (peer != props.myPeer.id) {\n              console.log(\"videostream \" + localVideoStream);\n              props.myPeer.call(peer, localVideoStream);\n            }\n          });\n        }\n      });\n      props.myPeer.on(\"call\", call => {\n        console.log(\"someone calling\");\n        call.answer(localVideoStream);\n        const video = document.getElementById(\"uploaded-video\");\n        call.on(\"stream\", userVideoStream => {\n          console.log(\"streaming \");\n          addVideoStream(video, userVideoStream);\n        });\n      });\n    }\n  }, [props]);\n\n  const addVideoStream = (video, stream) => {\n    if (video) {\n      video.srcObject = stream;\n      video.addEventListener(\"loadedmetadata\", () => {\n        video.play();\n      });\n    }\n  };\n\n  const startvideo = e => {\n    console.log(\"uploaded\");\n\n    if (e.target.files.length == 0) {\n      console.log(\"empty\");\n    }\n\n    let file = e.target.files[0];\n    const video = document.getElementById(\"uploaded-video\");\n    video.src = URL.createObjectURL(file);\n    let type = file.type;\n\n    if (!video.canPlayType(type)) {\n      // alert(\"cannot play that file\");\n      console.log(\"cannot play that file\");\n      return;\n    }\n\n    video.play().then(() => {\n      if (typeof video.mozCaptureStream == \"function\") {\n        localVideoStream = video.mozCaptureStream();\n      } else if (typeof video.captureStream == \"function\") {\n        localVideoStream = video.captureStream();\n      }\n\n      const newvideo = document.getElementById(\"new\");\n      newvideo.srcObject = localVideoStream;\n      newvideo.addEventListener(\"loadedmetadata\", () => {\n        newvideo.play();\n      });\n      props.newsocket.emit(\"play-video\", props.myPeer.id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*'\",\n      onChange: startvideo,\n      id: \"uploaded-file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"uploaded-video\",\n      autoPlay: true,\n      controls: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"new\",\n      controls: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Commonroom, \"9AuQnLD36HsTqMWevfznDxYwzPQ=\");\n\n_c = Commonroom;\nexport default Commonroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commonroom\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Commonroom.js"],"names":["React","useState","useEffect","Commonroom","props","connection","setconnection","localVideoStream","setstream","console","log","newsocket","on","data","myPeer","id","peerid","peers","forEach","peer","call","answer","video","document","getElementById","userVideoStream","addVideoStream","stream","srcObject","addEventListener","play","startvideo","e","target","files","length","file","src","URL","createObjectURL","type","canPlayType","then","mozCaptureStream","captureStream","newvideo","emit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Commonroom = (props) => {\r\n  const [connection, setconnection] = useState(null);\r\n  const [localVideoStream, setstream] = useState(null);\r\n  useEffect(() => {\r\n    console.log(\"notsocket \");\r\n    if (props.newsocket) {\r\n      props.newsocket.on(\"play-video\", (data) => {\r\n        if (props.myPeer.id === data.peerid) {\r\n          data.peers.forEach((peer) => {\r\n            if (peer != props.myPeer.id) {\r\n              console.log(\"videostream \" + localVideoStream);\r\n\r\n              props.myPeer.call(peer, localVideoStream);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      props.myPeer.on(\"call\", (call) => {\r\n        console.log(\"someone calling\");\r\n\r\n        call.answer(localVideoStream);\r\n        const video = document.getElementById(\"uploaded-video\");\r\n\r\n        call.on(\"stream\", (userVideoStream) => {\r\n          console.log(\"streaming \");\r\n          addVideoStream(video, userVideoStream);\r\n        });\r\n      });\r\n    }\r\n  }, [props]);\r\n\r\n  const addVideoStream = (video, stream) => {\r\n    if (video) {\r\n      video.srcObject = stream;\r\n      video.addEventListener(\"loadedmetadata\", () => {\r\n        video.play();\r\n      });\r\n    }\r\n  };\r\n  const startvideo = (e) => {\r\n    console.log(\"uploaded\");\r\n    if (e.target.files.length == 0) {\r\n      console.log(\"empty\");\r\n    }\r\n\r\n    let file = e.target.files[0];\r\n    const video = document.getElementById(\"uploaded-video\");\r\n    video.src = URL.createObjectURL(file);\r\n\r\n    let type = file.type;\r\n    if (!video.canPlayType(type)) {\r\n      // alert(\"cannot play that file\");\r\n      console.log(\"cannot play that file\");\r\n      return;\r\n    }\r\n\r\n    video.play().then(() => {\r\n      if (typeof video.mozCaptureStream == \"function\") {\r\n        localVideoStream = video.mozCaptureStream();\r\n      } else if (typeof video.captureStream == \"function\") {\r\n        localVideoStream = video.captureStream();\r\n      }\r\n\r\n      const newvideo = document.getElementById(\"new\");\r\n      newvideo.srcObject = localVideoStream;\r\n      newvideo.addEventListener(\"loadedmetadata\", () => {\r\n        newvideo.play();\r\n      });\r\n      props.newsocket.emit(\"play-video\", props.myPeer.id);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"video/*'\"\r\n        onChange={startvideo}\r\n        id=\"uploaded-file\"\r\n      ></input>\r\n      <video id=\"uploaded-video\" autoPlay controls muted></video>\r\n      <video id=\"new\" controls muted></video>\r\n    </div>\r\n  );\r\n};\r\nexport default Commonroom;\r\n"]},"metadata":{},"sourceType":"module"}