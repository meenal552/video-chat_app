{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Chatbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatMessages from \"./ChatMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chatbox = props => {\n  _s();\n\n  const [messages, setmessages] = useState([{\n    message: \"hi\",\n    user: \"Server\",\n    timeStamp: Date.now()\n  }]);\n  useEffect(() => {\n    if (props.socket) {\n      props.socket.on(\"newMessage\", data => {\n        const msgs = messages;\n        msgs.push({\n          message: data.message,\n          user: data.user,\n          timeStamp: data.timeStamp\n        });\n        console.log(\"Msgs \" + msgs);\n        setmessages(msgs);\n      });\n    }\n  }, [props, messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    const input = document.getElementById(\"chat-input\");\n    const inputValue = input.value;\n    input.value = \"\";\n\n    if (inputValue !== \"\") {\n      console.log(\"mesagesend emitted\");\n      props.socket.emit(\"messageSend\", {\n        message: inputValue,\n        timeStamp: Date.now()\n      });\n    }\n  };\n\n  console.log(\"hello\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    id: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: \"Chatbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-wrapper\",\n      id: \"all-messages\",\n      children: [\"all messages\", messages.map(message => /*#__PURE__*/_jsxDEV(ChatMessages, {\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" Write a message....\",\n          id: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatbox, \"nguXE7eU88vGWZ3YmgPhd8M0MWQ=\");\n\n_c = Chatbox;\nexport default Chatbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Chatbox.js"],"names":["React","useEffect","useState","ChatMessages","Chatbox","props","messages","setmessages","message","user","timeStamp","Date","now","socket","on","data","msgs","push","console","log","sendMessage","event","preventDefault","input","document","getElementById","inputValue","value","emit","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CACvC;AACEM,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAHb,GADuC,CAAD,CAAxC;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACQ,MAAV,EAAkB;AAChBR,MAAAA,KAAK,CAACQ,MAAN,CAAaC,EAAb,CAAgB,YAAhB,EAA+BC,IAAD,IAAU;AACtC,cAAMC,IAAI,GAAGV,QAAb;AACAU,QAAAA,IAAI,CAACC,IAAL,CAAU;AACRT,UAAAA,OAAO,EAAEO,IAAI,CAACP,OADN;AAERC,UAAAA,IAAI,EAAEM,IAAI,CAACN,IAFH;AAGRC,UAAAA,SAAS,EAAEK,IAAI,CAACL;AAHR,SAAV;AAKAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUH,IAAtB;AACAT,QAAAA,WAAW,CAACS,IAAD,CAAX;AACD,OATD;AAUD;AACF,GAbQ,EAaN,CAACX,KAAD,EAAQC,QAAR,CAbM,CAAT;;AAcA,QAAMc,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,UAAMC,UAAU,GAAGH,KAAK,CAACI,KAAzB;AACAJ,IAAAA,KAAK,CAACI,KAAN,GAAc,EAAd;;AAEA,QAAID,UAAU,KAAK,EAAnB,EAAuB;AACrBR,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAd,MAAAA,KAAK,CAACQ,MAAN,CAAae,IAAb,CAAkB,aAAlB,EAAiC;AAC/BpB,QAAAA,OAAO,EAAEkB,UADsB;AAE/BhB,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAFoB,OAAjC;AAID;AACF,GAdD;;AAeAM,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,EAAE,EAAC,SAA5B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAC,cAAjC;AAAA,iCAEGb,QAAQ,CAACuB,GAAT,CAAcrB,OAAD,iBACZ,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAK,MAAA,KAAK,EAAC,mBAAX;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEY,WAAhB;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,sBAFd;AAGE,UAAA,EAAE,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA5DD;;GAAMhB,O;;KAAAA,O;AA8DN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ChatMessages from \"./ChatMessages\";\r\n\r\nconst Chatbox = (props) => {\r\n  const [messages, setmessages] = useState([\r\n    {\r\n      message: \"hi\",\r\n      user: \"Server\",\r\n      timeStamp: Date.now(),\r\n    },\r\n  ]);\r\n  useEffect(() => {\r\n    if (props.socket) {\r\n      props.socket.on(\"newMessage\", (data) => {\r\n        const msgs = messages;\r\n        msgs.push({\r\n          message: data.message,\r\n          user: data.user,\r\n          timeStamp: data.timeStamp,\r\n        });\r\n        console.log(\"Msgs \" + msgs);\r\n        setmessages(msgs);\r\n      });\r\n    }\r\n  }, [props, messages]);\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    const input = document.getElementById(\"chat-input\");\r\n    const inputValue = input.value;\r\n    input.value = \"\";\r\n\r\n    if (inputValue !== \"\") {\r\n      console.log(\"mesagesend emitted\");\r\n      props.socket.emit(\"messageSend\", {\r\n        message: inputValue,\r\n        timeStamp: Date.now(),\r\n      });\r\n    }\r\n  };\r\n  console.log(\"hello\");\r\n  return (\r\n    <div className=\"chatbox\" id=\"chatbox\">\r\n      <div className=\"chat-header\">Chatbox</div>\r\n      <div className=\"list-wrapper\" id=\"all-messages\">\r\n        all messages\r\n        {messages.map((message) => (\r\n          <ChatMessages message={message}></ChatMessages>\r\n        ))}\r\n        <div className=\"list-end\"></div>\r\n      </div>\r\n\r\n      <div class=\"chat-form-wrapper\">\r\n        <form onSubmit={sendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\" Write a message....\"\r\n            id=\"chat-input\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"]},"metadata":{},"sourceType":"module"}