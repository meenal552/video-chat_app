{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\nimport Peer from \"peerjs\";\nimport Videochatroom from \"./Videochatroom\";\nimport Commonroom from \"./Commonroom\";\nimport Temp2 from \"./temp2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JoinRoom = props => {\n  _s();\n\n  const [videoroom, gotovideoroom] = useState(0);\n  const [socket, setSocket] = useState(null);\n  const [mypeer, setmypeer] = useState(\"\");\n  useEffect(() => {\n    const myPeer = new Peer(undefined, {\n      host: \"/\",\n      port: \"3008\"\n    });\n    setmypeer(myPeer);\n    console.log(props.match.params.id);\n    console.log(\"mount it using useEffect!\");\n    const newsocket = io.connect(\"http://localhost:4000\", {\n      query: {\n        roomId: props.match.params.id\n      }\n    });\n    setSocket(newsocket);\n    myPeer.on(\"open\", id => {\n      console.log(\"user id send to join room \" + id);\n      newsocket.emit(\"add-to-room\", id);\n    });\n    return () => {\n      props.newsocket.emit(\"user-disconnected\", props.myPeer.id);\n      props.newsocket.removeAllListeners();\n      props.myPeer.disconnect();\n    };\n  }, []);\n\n  const Joinvideochat = () => {\n    console.log(\"props join room \" + props.match.params.id);\n    if (videoroom == 0) gotovideoroom(1);else gotovideoroom(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello there \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Join for a video chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: \"50px\"\n      },\n      onClick: Joinvideochat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), videoroom === 0 ? /*#__PURE__*/_jsxDEV(Videochatroom, {\n      newsocket: socket,\n      myPeer: mypeer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Commonroom, {\n      newsocket: socket,\n      myPeer: mypeer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JoinRoom, \"0SkPOOITG9Ynp2YMHR6Udt3IodI=\");\n\n_c = JoinRoom;\nexport default _c2 = withRouter(JoinRoom);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JoinRoom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/JoinRoom.js"],"names":["React","useState","useEffect","useRef","io","withRouter","Peer","Videochatroom","Commonroom","Temp2","JoinRoom","props","videoroom","gotovideoroom","socket","setSocket","mypeer","setmypeer","myPeer","undefined","host","port","console","log","match","params","id","newsocket","connect","query","roomId","on","emit","removeAllListeners","disconnect","Joinvideochat","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Peer from \"peerjs\";\r\n\r\nimport Videochatroom from \"./Videochatroom\";\r\nimport Commonroom from \"./Commonroom\";\r\nimport Temp2 from \"./temp2\";\r\n\r\nconst JoinRoom = (props) => {\r\n  const [videoroom, gotovideoroom] = useState(0);\r\n  const [socket, setSocket] = useState(null);\r\n  const [mypeer, setmypeer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const myPeer = new Peer(undefined, {\r\n      host: \"/\",\r\n      port: \"3008\",\r\n    });\r\n\r\n    setmypeer(myPeer);\r\n\r\n    console.log(props.match.params.id);\r\n    console.log(\"mount it using useEffect!\");\r\n\r\n    const newsocket = io.connect(\"http://localhost:4000\", {\r\n      query: {\r\n        roomId: props.match.params.id,\r\n      },\r\n    });\r\n    setSocket(newsocket);\r\n\r\n    myPeer.on(\"open\", (id) => {\r\n      console.log(\"user id send to join room \" + id);\r\n      newsocket.emit(\"add-to-room\", id);\r\n    });\r\n    return () => {\r\n      props.newsocket.emit(\"user-disconnected\", props.myPeer.id);\r\n      props.newsocket.removeAllListeners();\r\n\r\n      props.myPeer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const Joinvideochat = () => {\r\n    console.log(\"props join room \" + props.match.params.id);\r\n    if (videoroom == 0) gotovideoroom(1);\r\n    else gotovideoroom(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>hello there </p>\r\n      <p>Join for a video chat</p>\r\n      <button style={{ width: \"50px\" }} onClick={Joinvideochat}></button>\r\n      {videoroom === 0 ? (\r\n        <Videochatroom newsocket={socket} myPeer={mypeer}></Videochatroom>\r\n      ) : (\r\n        <Commonroom newsocket={socket} myPeer={mypeer}></Commonroom>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(JoinRoom);\r\n"]},"metadata":{},"sourceType":"module"}