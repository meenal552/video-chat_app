{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Videochatroom.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"peerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst initializePeerConnection = () => {\n  const myPeer = new Peer(undefined, {\n    host: \"/\",\n    port: \"3008\"\n  });\n  return myPeer;\n};\n\nconst initializeSocketConnection = () => {\n  return openSocket.connect(websocket, {\n    // need to provide backend server endpoint\n    // (ws://localhost:5000) if ssl provided then\n    // (wss://localhost:5000)\n    secure: true,\n    reconnection: true,\n    rejectUnauthorized: false,\n    reconnectionAttempts: 10\n  });\n};\n\nexport default class Videochatroom extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/video_project/client/src/Components/Videochatroom.js"],"names":["React","Component","io","Peer","initializePeerConnection","myPeer","undefined","host","port","initializeSocketConnection","openSocket","connect","websocket","secure","reconnection","rejectUnauthorized","reconnectionAttempts","Videochatroom","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AACrC,QAAMC,MAAM,GAAG,IAAIF,IAAJ,CAASG,SAAT,EAAoB;AACjCC,IAAAA,IAAI,EAAE,GAD2B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAApB,CAAf;AAIA,SAAOH,MAAP;AACD,CAND;;AAQA,MAAMI,0BAA0B,GAAG,MAAM;AACvC,SAAOC,UAAU,CAACC,OAAX,CAAmBC,SAAnB,EAA8B;AACnC;AACA;AACA;AACAC,IAAAA,MAAM,EAAE,IAJ2B;AAKnCC,IAAAA,YAAY,EAAE,IALqB;AAMnCC,IAAAA,kBAAkB,EAAE,KANe;AAOnCC,IAAAA,oBAAoB,EAAE;AAPa,GAA9B,CAAP;AASD,CAVD;;AAYA,eAAe,MAAMC,aAAN,SAA4BhB,SAA5B,CAAsC;AACnDiB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAHkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"peerjs\";\r\n\r\nconst initializePeerConnection = () => {\r\n  const myPeer = new Peer(undefined, {\r\n    host: \"/\",\r\n    port: \"3008\",\r\n  });\r\n  return myPeer;\r\n};\r\n\r\nconst initializeSocketConnection = () => {\r\n  return openSocket.connect(websocket, {\r\n    // need to provide backend server endpoint\r\n    // (ws://localhost:5000) if ssl provided then\r\n    // (wss://localhost:5000)\r\n    secure: true,\r\n    reconnection: true,\r\n    rejectUnauthorized: false,\r\n    reconnectionAttempts: 10,\r\n  });\r\n};\r\n\r\nexport default class Videochatroom extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}