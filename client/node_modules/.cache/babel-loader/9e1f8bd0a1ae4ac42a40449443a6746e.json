{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JoinRoom(props) {\n  _s();\n\n  //socket.emit('join-room',{})\n  const [socket, setSocket] = useState(\"\");\n  useEffect(() => {\n    console.log(props.match.params.id);\n    console.log('mount it using useEffect!'); // if (!uuidValidate(props.match.params.id))\n    //   {history.push(\"/room-not-found\");}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    const newsocket = io.connect(\"http://localhost:4000\", {\n      query: {\n        roomId: props.match.params.id\n      }\n    });\n    setSocket(newsocket);\n  }, []);\n\n  const videochat = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: {\n        width: 800,\n        height: 300\n      }\n    }).then(function () {\n      // var video = document.querySelector('video');\n      // video.srcObject = mediaStream;\n      // video.onloadedmetadata = function(e) {\n      //   video.play();\n      // };\n      socket.emit(\"showVideo\", stream);\n    }).catch(function (err) {\n      console.log(err.name + \": \" + err.message);\n    });\n  };\n\n  socket.on(\"showVideo\", () => {\n    console.log(\"showing video\");\n    const videogrid = document.getElementById('video-grid');\n    const video = document.createElement('video');\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n      video.play();\n    });\n    videogrid.append(video);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"video-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: videochat,\n      children: \"start video chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      children: \"Start streaming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n}\n\n_s(JoinRoom, \"w1BP3r732wNKKc1yf8qU9j2Ax+E=\");\n\n_c = JoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoom\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/JoinRoom.js"],"names":["React","useState","useEffect","io","JoinRoom","props","socket","setSocket","console","log","match","params","id","newsocket","connect","query","roomId","videochat","stream","navigator","mediaDevices","getUserMedia","audio","video","width","height","then","emit","catch","err","name","message","on","videogrid","document","getElementById","createElement","srcObject","addEventListener","play","append"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB,C,CACA;;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EACf;AAAA;;AAAG;AACA,QAAO,CAACC,MAAD,EAAQC,SAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAlC;AAECC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAA/B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAFY,CAGZ;AACA;AACG;;AACA,UAAMI,SAAS,GAAIV,EAAE,CAACW,OAAH,CAAW,uBAAX,EAAoC;AACtDC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEX,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC;AADtB;AAD+C,KAApC,CAAnB;AAMDL,IAAAA,SAAS,CAACM,SAAD,CAAT;AAEH,GAdM,EAcJ,EAdI,CAAT;;AAkBA,QAAMI,SAAS,GAAC,YAAS;AACxB,UAAMC,MAAM,GAAE,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACvDC,MAAAA,KAAK,EAAE,IADgD;AAEvDC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB;AAFgD,KAApC,EAIlBC,IAJkB,CAIb,YAAW;AACf;AACA;AACA;AACA;AACA;AACApB,MAAAA,MAAM,CAACqB,IAAP,CAAY,WAAZ,EAAwBT,MAAxB;AAED,KAZkB,EAalBU,KAbkB,CAaZ,UAASC,GAAT,EAAc;AAAErB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,CAACC,IAAJ,GAAW,IAAX,GAAkBD,GAAG,CAACE,OAAlC;AAA6C,KAbjD,CAApB;AAgBA,GAjBD;;AAoBAzB,EAAAA,MAAM,CAAC0B,EAAP,CAAU,WAAV,EAAsB,MAAI;AACxBxB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,UAAMwB,SAAS,GAACC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACC,UAAMZ,KAAK,GAAGW,QAAQ,CAACE,aAAT,CAAuB,OAAvB,CAAd;AACAb,IAAAA,KAAK,CAACc,SAAN,GAAkBnB,MAAlB;AACAK,IAAAA,KAAK,CAACe,gBAAN,CAAuB,gBAAvB,EAAyC,MAAM;AAC7Cf,MAAAA,KAAK,CAACgB,IAAN;AACD,KAFD;AAGAN,IAAAA,SAAS,CAACO,MAAV,CAAiBjB,KAAjB;AACD,GATD;AAYA,sBAAO;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,4BAEH;AAAQ,MAAA,OAAO,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;GA3DuBb,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from \"socket.io-client\";\r\n//import { validate as uuidValidate } from \"uuid\";\r\n\r\n\r\nexport default function JoinRoom(props)\r\n{  //socket.emit('join-room',{})\r\n   const  [socket,setSocket]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        console.log(props.match.params.id);\r\n        console.log('mount it using useEffect!');\r\n        // if (!uuidValidate(props.match.params.id))\r\n        //   {history.push(\"/room-not-found\");}\r\n           // eslint-disable-next-line react-hooks/exhaustive-deps\r\n           const newsocket =  io.connect(\"http://localhost:4000\", {\r\n            query: {\r\n              roomId: props.match.params.id,\r\n              \r\n            },      \r\n          });\r\n          setSocket(newsocket);\r\n       \r\n      }, []);\r\n\r\n     \r\n\r\n    const videochat=async()=>{\r\n     const stream= await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: { width: 800, height: 300 }\r\n      })\r\n      .then(function() {\r\n        // var video = document.querySelector('video');\r\n        // video.srcObject = mediaStream;\r\n        // video.onloadedmetadata = function(e) {\r\n        //   video.play();\r\n        // };\r\n        socket.emit(\"showVideo\",stream);\r\n\r\n      })\r\n      .catch(function(err) { console.log(err.name + \": \" + err.message); });\r\n\r\n           \r\n    }\r\n    \r\n     \r\n    socket.on(\"showVideo\",()=>{\r\n      console.log(\"showing video\");\r\n     const videogrid=document.getElementById('video-grid');\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      video.addEventListener('loadedmetadata', () => {\r\n        video.play()\r\n      })\r\n      videogrid.append(video);\r\n    })\r\n  \r\n\r\n    return(<div id='video-grid'>\r\n        \r\n        <button onClick={videochat}>start video chat</button>\r\n        <video>Start streaming</video>\r\n    </div>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}