{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Videochatroom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\nimport Peer from \"peerjs\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videochatroom = props => {\n  _s();\n\n  // let socketInstance = useRef(null);\n  const [socket, setSocket] = useState(null);\n  const [peers, addpeers] = useState({});\n  const [mypeerID, setmypeerID] = useState(\"\");\n  const [mystreams, setmystream] = useState(\"\");\n  useEffect(() => {\n    let mystream = \"\"; //setmypeer(myPeer);\n\n    setSocket(props.newsocket);\n    const myVideo = document.getElementById(\"myvideo\");\n    myVideo.muted = true;\n    console.log(\"alright now \");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      mystream = stream;\n      setmystream(stream);\n      addVideoStream(myVideo, stream);\n      props.newsocket.on(\"user-connected\", userId => {\n        console.log(\"user id received of new user\" + userId);\n        setTimeout(connectToNewUser, 1000, userId, stream, props.myPeer); // connectToNewUser(userId, stream, myPeer);\n      });\n      props.newsocket.on(\"user-disconnected\", userId => {\n        console.log(\"userid disconnected \" + userId);\n        const disconnectedVideo = document.getElementById(userId);\n\n        if (userId) {\n          disconnectedVideo.remove();\n        }\n\n        if (peers[userId]) peers[userId].close();\n      });\n      props.newsocket.on(\"mute-unmute\", data => {\n        if (data.id != props.myPeer.id) {\n          const peervideo = document.getElementById(data.id);\n          if (data.mute) peervideo.muted = true;else peervideo.muted = false;\n        }\n      });\n      props.myPeer.on(\"call\", call => {\n        console.log(\"someone calling\");\n        call.answer(stream);\n        const video = document.createElement(\"video\");\n        console.log(\"call.peer \" + call.peer);\n        video.id = call.peer;\n        video.muted = true;\n        call.on(\"stream\", userVideoStream => {\n          addVideoStream(video, userVideoStream);\n        });\n        call.on(\"close\", () => {\n          console.log(\"call closing\");\n          myVideo.remove();\n        });\n      });\n    }); // return works like component will unmount\n\n    return () => {\n      props.newsocket.emit(\"user-disconnected\", props.myPeer.id);\n      props.newsocket.removeAllListeners();\n      mystream.getTracks().forEach(function (track) {\n        if (track.readyState == \"live\") {\n          track.stop();\n        }\n      });\n      props.myPeer.disconnect();\n    };\n  }, []);\n\n  const connectToNewUser = async (userId, stream, myPeer) => {\n    console.log(\"connecting to newuser! \");\n    const call = await myPeer.call(userId, stream);\n    call.on(\"error\", error => {\n      console.log(error);\n    }); // adding peers flush updates\n\n    console.log(\"peers adding \");\n    addpeers(prevstate => ({ ...prevstate,\n      [userId]: call\n    }));\n    const video = document.createElement(\"video\");\n    video.id = userId;\n    video.muted = true;\n    console.log(\"cALL \" + call + \"peer \" + myPeer.id);\n    if (call === null || call === \"\" || call === undefined) console.log(\"null\");\n    await call.on(\"stream\", userVideoStream => {\n      console.log(\"streaming \");\n      addVideoStream(video, userVideoStream);\n    });\n  };\n\n  const addVideoStream = (video, stream) => {\n    console.log(\"adding video stream with id \", video.id);\n    const videoGrid = document.getElementById(\"video-grid\");\n    video.srcObject = stream;\n    video.addEventListener(\"loadedmetadata\", () => {\n      video.play();\n    });\n    videoGrid.append(video);\n    console.log(\":appending\");\n  };\n\n  const muteunmute = () => {\n    const v = document.getElementById(\"myvideo\");\n    const data = {\n      id: mypeerID\n    };\n\n    if (v.muted) {\n      v.muted = false;\n      data.mute = false;\n    } else {\n      v.muted = true;\n      data.mute = true;\n    }\n\n    console.log(\"mute \" + mypeerID);\n    socket.emit(\"mute-unmute\", data);\n  };\n\n  const togglestream = () => {\n    mystreams.getTracks().forEach(function (track) {\n      if (track.readyState == \"live\") {\n        console.log(\":true \");\n        track.stop();\n      } else {\n        console.log(\":false\");\n        navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        }).then(stream => {\n          const video = document.getElementById(\"myvideo\");\n          video.srcObject = stream;\n          video.addEventListener(\"loadedmetadata\", () => {\n            video.play();\n          });\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"video-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"video chat room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"myvideo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: muteunmute,\n      children: \"pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglestream,\n      children: \"toggle video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Videochatroom, \"tLc7h0/ODRqucuncfmXfs4ICDLI=\");\n\n_c = Videochatroom;\nexport default _c2 = withRouter(Videochatroom);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Videochatroom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Videochatroom.js"],"names":["React","useState","useEffect","io","withRouter","Peer","Videochatroom","props","socket","setSocket","peers","addpeers","mypeerID","setmypeerID","mystreams","setmystream","mystream","newsocket","myVideo","document","getElementById","muted","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","on","userId","setTimeout","connectToNewUser","myPeer","disconnectedVideo","remove","close","data","id","peervideo","mute","call","answer","createElement","peer","userVideoStream","emit","removeAllListeners","getTracks","forEach","track","readyState","stop","disconnect","error","prevstate","undefined","videoGrid","srcObject","addEventListener","play","append","muteunmute","v","togglestream"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Peer from \"peerjs\";\r\n\r\n//import { validate as uuidValidate } from \"uuid\";\r\n\r\nconst Videochatroom = (props) => {\r\n  // let socketInstance = useRef(null);\r\n\r\n  const [socket, setSocket] = useState(null);\r\n  const [peers, addpeers] = useState({});\r\n  const [mypeerID, setmypeerID] = useState(\"\");\r\n  const [mystreams, setmystream] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let mystream = \"\";\r\n    //setmypeer(myPeer);\r\n\r\n    setSocket(props.newsocket);\r\n\r\n    const myVideo = document.getElementById(\"myvideo\");\r\n    myVideo.muted = true;\r\n\r\n    console.log(\"alright now \");\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        mystream = stream;\r\n        setmystream(stream);\r\n        addVideoStream(myVideo, stream);\r\n\r\n        props.newsocket.on(\"user-connected\", (userId) => {\r\n          console.log(\"user id received of new user\" + userId);\r\n          setTimeout(connectToNewUser, 1000, userId, stream, props.myPeer);\r\n          // connectToNewUser(userId, stream, myPeer);\r\n        });\r\n        props.newsocket.on(\"user-disconnected\", (userId) => {\r\n          console.log(\"userid disconnected \" + userId);\r\n          const disconnectedVideo = document.getElementById(userId);\r\n          if (userId) {\r\n            disconnectedVideo.remove();\r\n          }\r\n\r\n          if (peers[userId]) peers[userId].close();\r\n        });\r\n        props.newsocket.on(\"mute-unmute\", (data) => {\r\n          if (data.id != props.myPeer.id) {\r\n            const peervideo = document.getElementById(data.id);\r\n            if (data.mute) peervideo.muted = true;\r\n            else peervideo.muted = false;\r\n          }\r\n        });\r\n\r\n        props.myPeer.on(\"call\", (call) => {\r\n          console.log(\"someone calling\");\r\n\r\n          call.answer(stream);\r\n          const video = document.createElement(\"video\");\r\n          console.log(\"call.peer \" + call.peer);\r\n          video.id = call.peer;\r\n          video.muted = true;\r\n\r\n          call.on(\"stream\", (userVideoStream) => {\r\n            addVideoStream(video, userVideoStream);\r\n          });\r\n\r\n          call.on(\"close\", () => {\r\n            console.log(\"call closing\");\r\n            myVideo.remove();\r\n          });\r\n        });\r\n      });\r\n\r\n    // return works like component will unmount\r\n    return () => {\r\n      props.newsocket.emit(\"user-disconnected\", props.myPeer.id);\r\n      props.newsocket.removeAllListeners();\r\n\r\n      mystream.getTracks().forEach(function (track) {\r\n        if (track.readyState == \"live\") {\r\n          track.stop();\r\n        }\r\n      });\r\n      props.myPeer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const connectToNewUser = async (userId, stream, myPeer) => {\r\n    console.log(\"connecting to newuser! \");\r\n    const call = await myPeer.call(userId, stream);\r\n\r\n    call.on(\"error\", (error) => {\r\n      console.log(error);\r\n    });\r\n    // adding peers flush updates\r\n    console.log(\"peers adding \");\r\n    addpeers((prevstate) => ({\r\n      ...prevstate,\r\n      [userId]: call,\r\n    }));\r\n\r\n    const video = document.createElement(\"video\");\r\n    video.id = userId;\r\n    video.muted = true;\r\n    console.log(\"cALL \" + call + \"peer \" + myPeer.id);\r\n    if (call === null || call === \"\" || call === undefined) console.log(\"null\");\r\n\r\n    await call.on(\"stream\", (userVideoStream) => {\r\n      console.log(\"streaming \");\r\n      addVideoStream(video, userVideoStream);\r\n    });\r\n  };\r\n\r\n  const addVideoStream = (video, stream) => {\r\n    console.log(\"adding video stream with id \", video.id);\r\n\r\n    const videoGrid = document.getElementById(\"video-grid\");\r\n    video.srcObject = stream;\r\n    video.addEventListener(\"loadedmetadata\", () => {\r\n      video.play();\r\n    });\r\n    videoGrid.append(video);\r\n\r\n    console.log(\":appending\");\r\n  };\r\n\r\n  const muteunmute = () => {\r\n    const v = document.getElementById(\"myvideo\");\r\n    const data = {\r\n      id: mypeerID,\r\n    };\r\n    if (v.muted) {\r\n      v.muted = false;\r\n      data.mute = false;\r\n    } else {\r\n      v.muted = true;\r\n      data.mute = true;\r\n    }\r\n    console.log(\"mute \" + mypeerID);\r\n\r\n    socket.emit(\"mute-unmute\", data);\r\n  };\r\n  const togglestream = () => {\r\n    mystreams.getTracks().forEach(function (track) {\r\n      if (track.readyState == \"live\") {\r\n        console.log(\":true \");\r\n        track.stop();\r\n      } else {\r\n        console.log(\":false\");\r\n        navigator.mediaDevices\r\n          .getUserMedia({\r\n            video: true,\r\n            audio: true,\r\n          })\r\n          .then((stream) => {\r\n            const video = document.getElementById(\"myvideo\");\r\n            video.srcObject = stream;\r\n            video.addEventListener(\"loadedmetadata\", () => {\r\n              video.play();\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"video-grid\">\r\n      <p>video chat room</p>\r\n      <video id=\"myvideo\" />\r\n      <button onClick={muteunmute}>pause</button>\r\n      <button onClick={togglestream}>toggle video</button>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Videochatroom);\r\n"]},"metadata":{},"sourceType":"module"}