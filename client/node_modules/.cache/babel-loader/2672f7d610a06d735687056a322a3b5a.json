{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Videochatroom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\nimport Peer from \"peerjs\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videochatroom = props => {\n  _s();\n\n  // let socketInstance = useRef(null);\n  const [socket, setSocket] = useState(null);\n  const [peers, addpeers] = useState({});\n  const [mypeerID, setmypeerID] = useState(\"\");\n  const [mystreams, setmystream] = useState(\"\");\n  const [mute, setmute] = useState(true);\n  const [video_icon, setvideo_icon] = useState(true);\n  useEffect(() => {\n    const myPeer = new Peer(undefined, {\n      host: \"/\",\n      port: \"3008\"\n    });\n    let mystream = \"\"; //setmypeer(myPeer);\n\n    console.log(props.match.params.id);\n    console.log(\"mount it using useEffect!\");\n    const newsocket = io.connect(\"http://localhost:4000\", {\n      query: {\n        roomId: props.match.params.id\n      }\n    });\n    console.log(\"socket id \" + newsocket.id);\n    setSocket(newsocket);\n    myPeer.on(\"open\", id => {\n      console.log(\"user id send to join room \" + id);\n      setmypeerID(id);\n      newsocket.emit(\"join-room\", id);\n    });\n    const myVideo = document.getElementById(\"myvideo\");\n    myVideo.muted = true;\n    console.log(\"alright now \");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      mystream = stream;\n      setmystream(stream);\n      addVideoStream(myVideo, stream);\n      newsocket.on(\"user-connected\", userId => {\n        console.log(\"user id received of new user\" + userId);\n        setTimeout(connectToNewUser, 1000, userId, stream, myPeer); // connectToNewUser(userId, stream, myPeer);\n      });\n      newsocket.on(\"user-disconnected\", userId => {\n        console.log(\"userid disconnected \" + userId);\n        const disconnectedVideo = document.getElementById(userId);\n\n        if (userId) {\n          disconnectedVideo.remove();\n        }\n\n        if (peers[userId]) peers[userId].close();\n      });\n      newsocket.on(\"mute-unmute\", data => {\n        if (data.id != myPeer.id) {\n          const peervideo = document.getElementById(data.id);\n          if (data.mute) peervideo.muted = true;else peervideo.muted = false;\n        }\n      });\n      newsocket.on(\"togglestream\", peerid => {\n        if (peerid != myPeer.id) {\n          console.log(\"togglestream\");\n          const peervideo = document.getElementById(peerid);\n          const stream = peervideo.srcObject;\n          const tracks = stream.getTracks();\n          tracks.forEach(track => {\n            if (track.kind == \"video\") {\n              track.stop();\n            }\n          });\n        }\n      });\n      myPeer.on(\"call\", call => {\n        console.log(\"someone calling\");\n        call.answer(stream);\n        const video = document.createElement(\"video\");\n        console.log(\"call.peer \" + call.peer);\n        video.id = call.peer;\n        video.muted = true;\n        call.on(\"stream\", userVideoStream => {\n          addVideoStream(video, userVideoStream);\n        });\n        call.on(\"close\", () => {\n          console.log(\"call closing\");\n          myVideo.remove();\n        });\n      });\n    }); // return works like component will unmount\n\n    return () => {\n      newsocket.emit(\"user-disconnected\", myPeer.id);\n      newsocket.removeAllListeners();\n      mystream.getTracks().forEach(function (track) {\n        if (track.readyState == \"live\") {\n          track.stop();\n        }\n      });\n      myPeer.disconnect();\n    };\n  }, []);\n\n  const connectToNewUser = async (userId, stream, myPeer) => {\n    console.log(\"connecting to newuser! \");\n    const call = await myPeer.call(userId, stream);\n    call.on(\"error\", error => {\n      console.log(error);\n    }); // adding peers flush updates\n\n    console.log(\"peers adding \");\n    addpeers(prevstate => ({ ...prevstate,\n      [userId]: call\n    }));\n    const video = document.createElement(\"video\");\n    video.id = userId;\n    video.className = \"peer-videos\";\n    video.muted = true;\n    console.log(\"cALL \" + call + \"peer \" + myPeer.id);\n    if (call === null || call === \"\" || call === undefined) console.log(\"null\");\n    await call.on(\"stream\", userVideoStream => {\n      console.log(\"streaming \");\n      addVideoStream(video, userVideoStream);\n    });\n  };\n\n  const addVideoStream = (video, stream) => {\n    console.log(\"adding video stream with id \", video.id);\n    const videoGrid = document.getElementById(\"video-grid\");\n    video.srcObject = stream;\n    video.addEventListener(\"loadedmetadata\", () => {\n      video.play();\n    });\n\n    if (video.id === \"myvideo\") {} else {\n      videoGrid.append(video);\n    }\n\n    console.log(\":appending\");\n  };\n\n  const muteunmute = () => {\n    const v = document.getElementById(\"myvideo\");\n    const data = {\n      id: mypeerID\n    };\n\n    if (v.muted) {\n      v.muted = false;\n      data.mute = false;\n      setmute(false);\n    } else {\n      v.muted = true;\n      data.mute = true;\n      setmute(true);\n    }\n\n    console.log(\"mute \" + mypeerID);\n    socket.emit(\"mute-unmute\", data);\n  };\n\n  const togglestream = () => {\n    console.log(\"video icon value \" + video_icon);\n    const myvideo = document.getElementById(\"myvideo\");\n    mystreams.getTracks().forEach(track => {\n      if (track.kind === \"video\") {\n        if (track.readyState == \"live\") {\n          console.log(\":true \");\n          track.stop();\n          setvideo_icon(false);\n          myvideo.src = \"\";\n          myvideo.srcObject = null;\n          socket.emit(\"togglestream\", mypeerID);\n        } else {\n          console.log(\":false\");\n          navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          }).then(stream => {\n            setmystream(stream);\n            const video = document.getElementById(\"myvideo\");\n            video.srcObject = stream;\n            video.addEventListener(\"loadedmetadata\", () => {\n              video.play();\n            });\n          });\n          setvideo_icon(true);\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"self-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"myvideo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), mute === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: muteunmute,\n        id: \"mute-icon\",\n        className: \"video_chat_icons\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-microphone-slash\",\n          style: {\n            fontSize: \"24px\",\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: muteunmute,\n        id: \"unmute-icon\",\n        className: \"video_chat_icons\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-microphone\",\n          style: {\n            fontSize: \"24px\",\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), video_icon === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglestream,\n        id: \"mute-icon\",\n        className: \"video_chat_icons\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-video\",\n          style: {\n            fontSize: \"24px\",\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglestream,\n        id: \"unmute-icon\",\n        className: \"video_chat_icons\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-video-slash\",\n          style: {\n            fontSize: \"24px\",\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"peers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Videochatroom, \"gH4W/z4Jndn8YsIyQ4Rbpoz0Tc8=\");\n\n_c = Videochatroom;\nexport default _c2 = withRouter(Videochatroom);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Videochatroom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Videochatroom.js"],"names":["React","useState","useEffect","io","withRouter","Peer","Videochatroom","props","socket","setSocket","peers","addpeers","mypeerID","setmypeerID","mystreams","setmystream","mute","setmute","video_icon","setvideo_icon","myPeer","undefined","host","port","mystream","console","log","match","params","id","newsocket","connect","query","roomId","on","emit","myVideo","document","getElementById","muted","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","userId","setTimeout","connectToNewUser","disconnectedVideo","remove","close","data","peervideo","peerid","srcObject","tracks","getTracks","forEach","track","kind","stop","call","answer","createElement","peer","userVideoStream","removeAllListeners","readyState","disconnect","error","prevstate","className","videoGrid","addEventListener","play","append","muteunmute","v","togglestream","myvideo","src","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Peer from \"peerjs\";\r\n\r\n//import { validate as uuidValidate } from \"uuid\";\r\n\r\nconst Videochatroom = (props) => {\r\n  // let socketInstance = useRef(null);\r\n\r\n  const [socket, setSocket] = useState(null);\r\n  const [peers, addpeers] = useState({});\r\n  const [mypeerID, setmypeerID] = useState(\"\");\r\n  const [mystreams, setmystream] = useState(\"\");\r\n  const [mute, setmute] = useState(true);\r\n  const [video_icon, setvideo_icon] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const myPeer = new Peer(undefined, {\r\n      host: \"/\",\r\n      port: \"3008\",\r\n    });\r\n    let mystream = \"\";\r\n    //setmypeer(myPeer);\r\n\r\n    console.log(props.match.params.id);\r\n    console.log(\"mount it using useEffect!\");\r\n\r\n    const newsocket = io.connect(\"http://localhost:4000\", {\r\n      query: {\r\n        roomId: props.match.params.id,\r\n      },\r\n    });\r\n    console.log(\"socket id \" + newsocket.id);\r\n    setSocket(newsocket);\r\n    myPeer.on(\"open\", (id) => {\r\n      console.log(\"user id send to join room \" + id);\r\n\r\n      setmypeerID(id);\r\n      newsocket.emit(\"join-room\", id);\r\n    });\r\n\r\n    const myVideo = document.getElementById(\"myvideo\");\r\n    myVideo.muted = true;\r\n\r\n    console.log(\"alright now \");\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        mystream = stream;\r\n        setmystream(stream);\r\n        addVideoStream(myVideo, stream);\r\n\r\n        newsocket.on(\"user-connected\", (userId) => {\r\n          console.log(\"user id received of new user\" + userId);\r\n          setTimeout(connectToNewUser, 1000, userId, stream, myPeer);\r\n          // connectToNewUser(userId, stream, myPeer);\r\n        });\r\n        newsocket.on(\"user-disconnected\", (userId) => {\r\n          console.log(\"userid disconnected \" + userId);\r\n          const disconnectedVideo = document.getElementById(userId);\r\n          if (userId) {\r\n            disconnectedVideo.remove();\r\n          }\r\n\r\n          if (peers[userId]) peers[userId].close();\r\n        });\r\n        newsocket.on(\"mute-unmute\", (data) => {\r\n          if (data.id != myPeer.id) {\r\n            const peervideo = document.getElementById(data.id);\r\n            if (data.mute) peervideo.muted = true;\r\n            else peervideo.muted = false;\r\n          }\r\n        });\r\n        newsocket.on(\"togglestream\", (peerid) => {\r\n          if (peerid != myPeer.id) {\r\n            console.log(\"togglestream\");\r\n            const peervideo = document.getElementById(peerid);\r\n            const stream = peervideo.srcObject;\r\n            const tracks = stream.getTracks();\r\n            tracks.forEach((track) => {\r\n              if (track.kind == \"video\") {\r\n                track.stop();\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        myPeer.on(\"call\", (call) => {\r\n          console.log(\"someone calling\");\r\n\r\n          call.answer(stream);\r\n          const video = document.createElement(\"video\");\r\n          console.log(\"call.peer \" + call.peer);\r\n          video.id = call.peer;\r\n          video.muted = true;\r\n\r\n          call.on(\"stream\", (userVideoStream) => {\r\n            addVideoStream(video, userVideoStream);\r\n          });\r\n\r\n          call.on(\"close\", () => {\r\n            console.log(\"call closing\");\r\n            myVideo.remove();\r\n          });\r\n        });\r\n      });\r\n\r\n    // return works like component will unmount\r\n    return () => {\r\n      newsocket.emit(\"user-disconnected\", myPeer.id);\r\n      newsocket.removeAllListeners();\r\n\r\n      mystream.getTracks().forEach(function (track) {\r\n        if (track.readyState == \"live\") {\r\n          track.stop();\r\n        }\r\n      });\r\n      myPeer.disconnect();\r\n    };\r\n  }, []);\r\n  const connectToNewUser = async (userId, stream, myPeer) => {\r\n    console.log(\"connecting to newuser! \");\r\n    const call = await myPeer.call(userId, stream);\r\n\r\n    call.on(\"error\", (error) => {\r\n      console.log(error);\r\n    });\r\n    // adding peers flush updates\r\n    console.log(\"peers adding \");\r\n    addpeers((prevstate) => ({\r\n      ...prevstate,\r\n      [userId]: call,\r\n    }));\r\n\r\n    const video = document.createElement(\"video\");\r\n    video.id = userId;\r\n    video.className = \"peer-videos\";\r\n    video.muted = true;\r\n    console.log(\"cALL \" + call + \"peer \" + myPeer.id);\r\n    if (call === null || call === \"\" || call === undefined) console.log(\"null\");\r\n\r\n    await call.on(\"stream\", (userVideoStream) => {\r\n      console.log(\"streaming \");\r\n      addVideoStream(video, userVideoStream);\r\n    });\r\n  };\r\n\r\n  const addVideoStream = (video, stream) => {\r\n    console.log(\"adding video stream with id \", video.id);\r\n\r\n    const videoGrid = document.getElementById(\"video-grid\");\r\n    video.srcObject = stream;\r\n    video.addEventListener(\"loadedmetadata\", () => {\r\n      video.play();\r\n    });\r\n    if (video.id === \"myvideo\") {\r\n    } else {\r\n      videoGrid.append(video);\r\n    }\r\n\r\n    console.log(\":appending\");\r\n  };\r\n\r\n  const muteunmute = () => {\r\n    const v = document.getElementById(\"myvideo\");\r\n    const data = {\r\n      id: mypeerID,\r\n    };\r\n    if (v.muted) {\r\n      v.muted = false;\r\n      data.mute = false;\r\n      setmute(false);\r\n    } else {\r\n      v.muted = true;\r\n      data.mute = true;\r\n      setmute(true);\r\n    }\r\n    console.log(\"mute \" + mypeerID);\r\n\r\n    socket.emit(\"mute-unmute\", data);\r\n  };\r\n  const togglestream = () => {\r\n    console.log(\"video icon value \" + video_icon);\r\n    const myvideo = document.getElementById(\"myvideo\");\r\n    mystreams.getTracks().forEach((track) => {\r\n      if (track.kind === \"video\") {\r\n        if (track.readyState == \"live\") {\r\n          console.log(\":true \");\r\n          track.stop();\r\n          setvideo_icon(false);\r\n          myvideo.src = \"\";\r\n          myvideo.srcObject = null;\r\n          socket.emit(\"togglestream\", mypeerID);\r\n        } else {\r\n          console.log(\":false\");\r\n          navigator.mediaDevices\r\n            .getUserMedia({\r\n              video: true,\r\n              audio: true,\r\n            })\r\n            .then((stream) => {\r\n              setmystream(stream);\r\n              const video = document.getElementById(\"myvideo\");\r\n              video.srcObject = stream;\r\n              video.addEventListener(\"loadedmetadata\", () => {\r\n                video.play();\r\n              });\r\n            });\r\n          setvideo_icon(true);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-main\">\r\n      <div class=\"self-video\">\r\n        <video id=\"myvideo\" />\r\n\r\n        {mute === true ? (\r\n          <button\r\n            onClick={muteunmute}\r\n            id=\"mute-icon\"\r\n            className=\"video_chat_icons\"\r\n          >\r\n            <i\r\n              class=\"fas fa-microphone-slash\"\r\n              style={{ fontSize: \"24px\", color: \"red\" }}\r\n            />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={muteunmute}\r\n            id=\"unmute-icon\"\r\n            className=\"video_chat_icons\"\r\n          >\r\n            <i\r\n              class=\"fas fa-microphone\"\r\n              style={{ fontSize: \"24px\", color: \"red\" }}\r\n            />\r\n          </button>\r\n        )}\r\n        {video_icon === true ? (\r\n          <button\r\n            onClick={togglestream}\r\n            id=\"mute-icon\"\r\n            className=\"video_chat_icons\"\r\n          >\r\n            <i class=\"fa fa-video\" style={{ fontSize: \"24px\", color: \"red\" }} />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={togglestream}\r\n            id=\"unmute-icon\"\r\n            className=\"video_chat_icons\"\r\n          >\r\n            <i\r\n              class=\"fa fa-video-slash\"\r\n              style={{ fontSize: \"24px\", color: \"red\" }}\r\n            />\r\n          </button>\r\n        )}\r\n      </div>\r\n      <h1>peers</h1>\r\n      <div id=\"video-grid\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Videochatroom);\r\n"]},"metadata":{},"sourceType":"module"}