{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JoinRoom(props) {\n  _s();\n\n  //socket.emit('join-room',{})\n  [socket, setSocket] = useState(\"\");\n  useEffect(() => {\n    console.log(props.match.params.id);\n    console.log('mount it using useEffect!'); // if (!uuidValidate(props.match.params.id))\n    //   {history.push(\"/room-not-found\");}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const socket = io.connect(\"http://localhost:4000\", {\n    query: {\n      roomId: props.match.params.id\n    }\n  });\n  setSocket(socket);\n\n  const videochat = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: {\n        width: 1280,\n        height: 720\n      }\n    }).then(function (mediaStream) {\n      var video = document.querySelector('video');\n      video.srcObject = mediaStream;\n\n      video.onloadedmetadata = function (e) {\n        video.play();\n      };\n    }).catch(function (err) {\n      console.log(err.name + \": \" + err.message);\n    });\n    console.log(\"socket is \" + socket);\n    socket.emit(\"showVideo\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: videochat,\n      children: \"start video chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      children: \"Start streaming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n\n_s(JoinRoom, \"X84oG7rPwBW3Op/2mv/xhVbwveQ=\");\n\n_c = JoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoom\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/JoinRoom.js"],"names":["React","useState","useEffect","io","JoinRoom","props","socket","setSocket","console","log","match","params","id","connect","query","roomId","videochat","stream","navigator","mediaDevices","getUserMedia","audio","video","width","height","then","mediaStream","document","querySelector","srcObject","onloadedmetadata","e","play","catch","err","name","message","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB,C,CACA;;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EACf;AAAA;;AAAG;AACC,GAACC,MAAD,EAAQC,SAAR,IAAmBN,QAAQ,CAAC,EAAD,CAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAA/B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAFY,CAGZ;AACA;AACG;AAEJ,GAPM,EAOJ,EAPI,CAAT;AASE,QAAMH,MAAM,GAAIH,EAAE,CAACU,OAAH,CAAW,uBAAX,EAAoC;AACpDC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEV,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC;AADtB;AAD6C,GAApC,CAAhB;AAMFL,EAAAA,SAAS,CAACD,MAAD,CAAT;;AAEA,QAAMU,SAAS,GAAC,YAAS;AACxB,UAAMC,MAAM,GAAE,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACvDC,MAAAA,KAAK,EAAE,IADgD;AAEvDC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB;AAFgD,KAApC,EAIlBC,IAJkB,CAIb,UAASC,WAAT,EAAsB;AAC1B,UAAIJ,KAAK,GAAGK,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAN,MAAAA,KAAK,CAACO,SAAN,GAAkBH,WAAlB;;AACAJ,MAAAA,KAAK,CAACQ,gBAAN,GAAyB,UAASC,CAAT,EAAY;AACnCT,QAAAA,KAAK,CAACU,IAAN;AACD,OAFD;AAGD,KAVkB,EAWlBC,KAXkB,CAWZ,UAASC,GAAT,EAAc;AAAE1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAG,CAACC,IAAJ,GAAW,IAAX,GAAkBD,GAAG,CAACE,OAAlC;AAA6C,KAXjD,CAApB;AAaC5B,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAaH,MAAzB;AACAA,IAAAA,MAAM,CAAC+B,IAAP,CAAY,WAAZ;AAED,GAjBD;;AAoBA,sBAAO;AAAA,4BAEH;AAAQ,MAAA,OAAO,EAAErB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;GA9CuBZ,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from \"socket.io-client\";\r\n//import { validate as uuidValidate } from \"uuid\";\r\n\r\n\r\nexport default function JoinRoom(props)\r\n{  //socket.emit('join-room',{})\r\n    [socket,setSocket]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        console.log(props.match.params.id);\r\n        console.log('mount it using useEffect!');\r\n        // if (!uuidValidate(props.match.params.id))\r\n        //   {history.push(\"/room-not-found\");}\r\n           // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       \r\n      }, []);\r\n\r\n      const socket =  io.connect(\"http://localhost:4000\", {\r\n      query: {\r\n        roomId: props.match.params.id,\r\n        \r\n      },      \r\n    });\r\n    setSocket(socket);\r\n\r\n    const videochat=async()=>{\r\n     const stream= await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: { width: 1280, height: 720 }\r\n      })\r\n      .then(function(mediaStream) {\r\n        var video = document.querySelector('video');\r\n        video.srcObject = mediaStream;\r\n        video.onloadedmetadata = function(e) {\r\n          video.play();\r\n        };\r\n      })\r\n      .catch(function(err) { console.log(err.name + \": \" + err.message); });\r\n\r\n      console.log(\"socket is \"+socket);\r\n      socket.emit(\"showVideo\",)\r\n      \r\n    }\r\n  \r\n\r\n    return(<div>\r\n        \r\n        <button onClick={videochat}>start video chat</button>\r\n        <video>Start streaming</video>\r\n    </div>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}