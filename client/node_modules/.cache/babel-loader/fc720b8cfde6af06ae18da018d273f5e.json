{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Videochatroom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\"; //import createSocketConnectionInstance from \"./Connection\"\n\nimport Peer from \"peerjs\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videochatroom = props => {\n  _s();\n\n  // let socketInstance = useRef(null);\n  const [socket, setSocket] = useState(null);\n  const [peers, addpeers] = useState({});\n  const [mystream, setstream] = useState(null);\n  const [mypeer, setmypeer] = useState(\"\");\n  useEffect(() => {\n    const myPeer = new Peer(undefined, {\n      host: \"/\",\n      port: \"3008\"\n    });\n    setmypeer(myPeer);\n  });\n  useEffect(() => {\n    console.log(props.match.params.id);\n    console.log(\"mount it using useEffect!\");\n    const newsocket = io.connect(\"http://localhost:4000\", {\n      query: {\n        roomId: props.match.params.id\n      }\n    });\n    setSocket(newsocket);\n    myPeer.on(\"open\", id => {\n      console.log(\"user id send to join room \" + id);\n      newsocket.emit(\"join-room\", id);\n    });\n    const myVideo = document.createElement(\"video\");\n    myVideo.muted = true;\n    console.log(\"alright now \");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setstream(stream);\n      addVideoStream(myVideo, stream);\n      newsocket.on(\"user-connected\", userId => {\n        console.log(\"user id received of new user\" + userId); // connectToNewUser(userId, mystream);\n\n        setTimeout(connectToNewUser, 1000, userId, mystream);\n      });\n      newsocket.on(\"user-disconnected\", userId => {\n        if (peers[userId]) peers[userId].close();\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    myPeer.on(\"call\", call => {\n      console.log(\"someone calling\");\n      call.answer(mystream);\n      const video = document.createElement(\"video\");\n      call.on(\"stream\", userVideoStream => {\n        addVideoStream(video, userVideoStream);\n      });\n    });\n  }, []);\n\n  const connectToNewUser = (userId, stream) => {\n    console.log(\"connecting to newuser! \");\n    const call = mypeer.call(userId, stream);\n    console.log(\"cALL \" + call + \"peer \" + mypeer.id);\n    call.on(\"error\", error => {\n      console.log(error);\n    }); // adding peers\n    // console.log(\"peers adding \");\n    // addpeers((prevstate) => ({\n    //   ...prevstate,\n    //   [userId]: call,\n    // }));\n\n    const updatedValue = {};\n    updatedValue[userId] = call;\n    addpeers({ ...peers,\n      ...updatedValue\n    });\n    console.log(\"peers \", peers[userId]);\n    const video = document.createElement(\"video\");\n    call.on(\"stream\", userVideoStream => {\n      console.log(\"streaming \");\n      addVideoStream(video, userVideoStream);\n    });\n    call.on(\"close\", () => {\n      video.remove();\n    });\n  };\n\n  const addVideoStream = (video, stream) => {\n    console.log(\"adding video stream\");\n    const videoGrid = document.getElementById(\"video-grid\");\n    video.srcObject = stream;\n    video.addEventListener(\"loadedmetadata\", () => {\n      video.play();\n    });\n    videoGrid.append(video);\n    console.log(\":appending\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"video-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"video chat room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      children: \"Start streaming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Videochatroom, \"LhsgHHBHxEwbEve+9taiHOrbl9c=\");\n\n_c = Videochatroom;\nexport default _c2 = withRouter(Videochatroom);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Videochatroom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Videochatroom.js"],"names":["React","useState","useEffect","io","withRouter","Peer","Videochatroom","props","socket","setSocket","peers","addpeers","mystream","setstream","mypeer","setmypeer","myPeer","undefined","host","port","console","log","match","params","id","newsocket","connect","query","roomId","on","emit","myVideo","document","createElement","muted","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","userId","setTimeout","connectToNewUser","close","catch","err","call","answer","userVideoStream","error","updatedValue","remove","videoGrid","getElementById","srcObject","addEventListener","play","append"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,SAAX,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAG,IAAIX,IAAJ,CAASY,SAAT,EAAoB;AACjCC,MAAAA,IAAI,EAAE,GAD2B;AAEjCC,MAAAA,IAAI,EAAE;AAF2B,KAApB,CAAf;AAKAJ,IAAAA,SAAS,CAACC,MAAD,CAAT;AACD,GAPQ,CAAT;AASAd,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,EAA/B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,UAAMI,SAAS,GAAGtB,EAAE,CAACuB,OAAH,CAAW,uBAAX,EAAoC;AACpDC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAErB,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC;AADtB;AAD6C,KAApC,CAAlB;AAKAf,IAAAA,SAAS,CAACgB,SAAD,CAAT;AACAT,IAAAA,MAAM,CAACa,EAAP,CAAU,MAAV,EAAmBL,EAAD,IAAQ;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BG,EAA3C;AACAC,MAAAA,SAAS,CAACK,IAAV,CAAe,WAAf,EAA4BN,EAA5B;AACD,KAHD;AAKA,UAAMO,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACAF,IAAAA,OAAO,CAACG,KAAR,GAAgB,IAAhB;AAEAd,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAc,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZC,MAAAA,KAAK,EAAE;AAFK,KADhB,EAKGC,IALH,CAKSC,MAAD,IAAY;AAChB5B,MAAAA,SAAS,CAAC4B,MAAD,CAAT;AACAC,MAAAA,cAAc,CAACX,OAAD,EAAUU,MAAV,CAAd;AAEAhB,MAAAA,SAAS,CAACI,EAAV,CAAa,gBAAb,EAAgCc,MAAD,IAAY;AACzCvB,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCsB,MAA7C,EADyC,CAEzC;;AACAC,QAAAA,UAAU,CAACC,gBAAD,EAAmB,IAAnB,EAAyBF,MAAzB,EAAiC/B,QAAjC,CAAV;AACD,OAJD;AAKAa,MAAAA,SAAS,CAACI,EAAV,CAAa,mBAAb,EAAmCc,MAAD,IAAY;AAC5C,YAAIjC,KAAK,CAACiC,MAAD,CAAT,EAAmBjC,KAAK,CAACiC,MAAD,CAAL,CAAcG,KAAd;AACpB,OAFD;AAGD,KAjBH,EAkBGC,KAlBH,CAkBUC,GAAD,IAAS;AACd5B,MAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,KApBH;AAsBAhC,IAAAA,MAAM,CAACa,EAAP,CAAU,MAAV,EAAmBoB,IAAD,IAAU;AAC1B7B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA4B,MAAAA,IAAI,CAACC,MAAL,CAAYtC,QAAZ;AACA,YAAM0B,KAAK,GAAGN,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAgB,MAAAA,IAAI,CAACpB,EAAL,CAAQ,QAAR,EAAmBsB,eAAD,IAAqB;AACrCT,QAAAA,cAAc,CAACJ,KAAD,EAAQa,eAAR,CAAd;AACD,OAFD;AAGD,KAPD;AAQD,GAjDQ,EAiDN,EAjDM,CAAT;;AAmDA,QAAMN,gBAAgB,GAAG,CAACF,MAAD,EAASF,MAAT,KAAoB;AAC3CrB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEA,UAAM4B,IAAI,GAAGnC,MAAM,CAACmC,IAAP,CAAYN,MAAZ,EAAoBF,MAApB,CAAb;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAU4B,IAAV,GAAiB,OAAjB,GAA2BnC,MAAM,CAACU,EAA9C;AACAyB,IAAAA,IAAI,CAACpB,EAAL,CAAQ,OAAR,EAAkBuB,KAAD,IAAW;AAC1BhC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,KAAZ;AACD,KAFD,EAL2C,CAQ3C;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMC,YAAY,GAAG,EAArB;AACAA,IAAAA,YAAY,CAACV,MAAD,CAAZ,GAAuBM,IAAvB;AACAtC,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEP,SAAG2C;AAFI,KAAD,CAAR;AAIAjC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,KAAK,CAACiC,MAAD,CAA3B;AAEA,UAAML,KAAK,GAAGN,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AAEAgB,IAAAA,IAAI,CAACpB,EAAL,CAAQ,QAAR,EAAmBsB,eAAD,IAAqB;AACrC/B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAqB,MAAAA,cAAc,CAACJ,KAAD,EAAQa,eAAR,CAAd;AACD,KAHD;AAIAF,IAAAA,IAAI,CAACpB,EAAL,CAAQ,OAAR,EAAiB,MAAM;AACrBS,MAAAA,KAAK,CAACgB,MAAN;AACD,KAFD;AAGD,GAhCD;;AAkCA,QAAMZ,cAAc,GAAG,CAACJ,KAAD,EAAQG,MAAR,KAAmB;AACxCrB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMkC,SAAS,GAAGvB,QAAQ,CAACwB,cAAT,CAAwB,YAAxB,CAAlB;AACAlB,IAAAA,KAAK,CAACmB,SAAN,GAAkBhB,MAAlB;AACAH,IAAAA,KAAK,CAACoB,gBAAN,CAAuB,gBAAvB,EAAyC,MAAM;AAC7CpB,MAAAA,KAAK,CAACqB,IAAN;AACD,KAFD;AAGAJ,IAAAA,SAAS,CAACK,MAAV,CAAiBtB,KAAjB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxHD;;GAAMf,a;;KAAAA,a;AAyHN,qBAAeF,UAAU,CAACE,aAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\n//import createSocketConnectionInstance from \"./Connection\"\r\nimport Peer from \"peerjs\";\r\n//import { validate as uuidValidate } from \"uuid\";\r\n\r\nconst Videochatroom = (props) => {\r\n  // let socketInstance = useRef(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [peers, addpeers] = useState({});\r\n  const [mystream, setstream] = useState(null);\r\n  const [mypeer, setmypeer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const myPeer = new Peer(undefined, {\r\n      host: \"/\",\r\n      port: \"3008\",\r\n    });\r\n\r\n    setmypeer(myPeer);\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(props.match.params.id);\r\n    console.log(\"mount it using useEffect!\");\r\n\r\n    const newsocket = io.connect(\"http://localhost:4000\", {\r\n      query: {\r\n        roomId: props.match.params.id,\r\n      },\r\n    });\r\n    setSocket(newsocket);\r\n    myPeer.on(\"open\", (id) => {\r\n      console.log(\"user id send to join room \" + id);\r\n      newsocket.emit(\"join-room\", id);\r\n    });\r\n\r\n    const myVideo = document.createElement(\"video\");\r\n    myVideo.muted = true;\r\n\r\n    console.log(\"alright now \");\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        setstream(stream);\r\n        addVideoStream(myVideo, stream);\r\n\r\n        newsocket.on(\"user-connected\", (userId) => {\r\n          console.log(\"user id received of new user\" + userId);\r\n          // connectToNewUser(userId, mystream);\r\n          setTimeout(connectToNewUser, 1000, userId, mystream);\r\n        });\r\n        newsocket.on(\"user-disconnected\", (userId) => {\r\n          if (peers[userId]) peers[userId].close();\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    myPeer.on(\"call\", (call) => {\r\n      console.log(\"someone calling\");\r\n      call.answer(mystream);\r\n      const video = document.createElement(\"video\");\r\n      call.on(\"stream\", (userVideoStream) => {\r\n        addVideoStream(video, userVideoStream);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const connectToNewUser = (userId, stream) => {\r\n    console.log(\"connecting to newuser! \");\r\n\r\n    const call = mypeer.call(userId, stream);\r\n    console.log(\"cALL \" + call + \"peer \" + mypeer.id);\r\n    call.on(\"error\", (error) => {\r\n      console.log(error);\r\n    });\r\n    // adding peers\r\n    // console.log(\"peers adding \");\r\n    // addpeers((prevstate) => ({\r\n    //   ...prevstate,\r\n    //   [userId]: call,\r\n    // }));\r\n\r\n    const updatedValue = {};\r\n    updatedValue[userId] = call;\r\n    addpeers({\r\n      ...peers,\r\n      ...updatedValue,\r\n    });\r\n    console.log(\"peers \", peers[userId]);\r\n\r\n    const video = document.createElement(\"video\");\r\n\r\n    call.on(\"stream\", (userVideoStream) => {\r\n      console.log(\"streaming \");\r\n      addVideoStream(video, userVideoStream);\r\n    });\r\n    call.on(\"close\", () => {\r\n      video.remove();\r\n    });\r\n  };\r\n\r\n  const addVideoStream = (video, stream) => {\r\n    console.log(\"adding video stream\");\r\n    const videoGrid = document.getElementById(\"video-grid\");\r\n    video.srcObject = stream;\r\n    video.addEventListener(\"loadedmetadata\", () => {\r\n      video.play();\r\n    });\r\n    videoGrid.append(video);\r\n    console.log(\":appending\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"video-grid\">\r\n      <p>video chat room</p>\r\n\r\n      <video>Start streaming</video>\r\n      {/* {chatroom} */}\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Videochatroom);\r\n"]},"metadata":{},"sourceType":"module"}