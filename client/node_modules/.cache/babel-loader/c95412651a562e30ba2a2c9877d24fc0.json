{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socketInstance = useRef(null);\n\nconst startConnection = () => {\n  params = {\n    quality: 12\n  };\n  socketInstance.current = createSocketConnectionInstance({\n    params\n  });\n};\n\nexport default function JoinRoom(props) {\n  _s();\n\n  //socket.emit('join-room',{})\n  const [socket, setSocket] = useState(\"\");\n  useEffect(() => {\n    console.log(props.match.params.id);\n    console.log('mount it using useEffect!'); // if (!uuidValidate(props.match.params.id))\n    //   {history.push(\"/room-not-found\");}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    const newsocket = io.connect(\"http://localhost:4000\", {\n      query: {\n        roomId: props.match.params.id\n      }\n    });\n    setSocket(newsocket);\n    startConnection();\n  }, []);\n\n  const videochat = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: {\n        width: 800,\n        height: 300\n      }\n    });\n    socket.emit(\"showVideo\", stream);\n    socket.on(\"showVideo\", stream => {\n      console.log(\"showing video\");\n      const videogrid = document.getElementById('video-grid');\n      var video = document.querySelector('video');\n      video.srcObject = stream;\n      video.addEventListener('loadedmetadata', () => {\n        video.play();\n      });\n      videogrid.append(video);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"video-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: videochat,\n      children: \"start video chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      children: \"Start streaming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}\n\n_s(JoinRoom, \"w1BP3r732wNKKc1yf8qU9j2Ax+E=\");\n\n_c = JoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoom\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/JoinRoom.js"],"names":["React","useState","useEffect","io","socketInstance","useRef","startConnection","params","quality","current","createSocketConnectionInstance","JoinRoom","props","socket","setSocket","console","log","match","id","newsocket","connect","query","roomId","videochat","stream","navigator","mediaDevices","getUserMedia","audio","video","width","height","emit","on","videogrid","document","getElementById","querySelector","srcObject","addEventListener","play","append"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB,C,CACA;;;AACA,IAAIC,cAAc,GAAGC,MAAM,CAAC,IAAD,CAA3B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1BC,EAAAA,MAAM,GAAG;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAT;AACAJ,EAAAA,cAAc,CAACK,OAAf,GAAyBC,8BAA8B,CAAC;AACpDH,IAAAA;AADoD,GAAD,CAAvD;AAGH,CALD;;AAOA,eAAe,SAASI,QAAT,CAAkBC,KAAlB,EACf;AAAA;;AAAG;AACA,QAAO,CAACC,MAAD,EAAQC,SAAR,IAAmBb,QAAQ,CAAC,EAAD,CAAlC;AAECC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAN,CAAYV,MAAZ,CAAmBW,EAA/B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAFY,CAGZ;AACA;AACG;;AACA,UAAMG,SAAS,GAAIhB,EAAE,CAACiB,OAAH,CAAW,uBAAX,EAAoC;AACtDC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEV,KAAK,CAACK,KAAN,CAAYV,MAAZ,CAAmBW;AADtB;AAD+C,KAApC,CAAnB;AAMDJ,IAAAA,SAAS,CAACK,SAAD,CAAT;AACAb,IAAAA,eAAe;AAElB,GAfM,EAeJ,EAfI,CAAT;;AAmBA,QAAMiB,SAAS,GAAC,YAAS;AACvB,UAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACvDC,MAAAA,KAAK,EAAE,IADgD;AAEvDC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB;AAFgD,KAApC,CAArB;AAIAlB,IAAAA,MAAM,CAACmB,IAAP,CAAY,WAAZ,EAAwBR,MAAxB;AAGAX,IAAAA,MAAM,CAACoB,EAAP,CAAU,WAAV,EAAuBT,MAAD,IAAU;AAC9BT,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAMkB,SAAS,GAACC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACA,UAAIP,KAAK,GAAGM,QAAQ,CAACE,aAAT,CAAuB,OAAvB,CAAZ;AACAR,MAAAA,KAAK,CAACS,SAAN,GAAkBd,MAAlB;AACAK,MAAAA,KAAK,CAACU,gBAAN,CAAuB,gBAAvB,EAAyC,MAAM;AAC/CV,QAAAA,KAAK,CAACW,IAAN;AACC,OAFD;AAGAN,MAAAA,SAAS,CAACO,MAAV,CAAiBZ,KAAjB;AACD,KATD;AAYD,GApBD;;AA0BA,sBAAO;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,4BAEH;AAAQ,MAAA,OAAO,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;GAtDuBZ,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from \"socket.io-client\";\r\n//import { validate as uuidValidate } from \"uuid\";\r\nlet socketInstance = useRef(null);    \r\n\r\nconst startConnection = () => {\r\n    params = {quality: 12}\r\n    socketInstance.current = createSocketConnectionInstance({\r\n        params\r\n    });\r\n}\r\n\r\nexport default function JoinRoom(props)\r\n{  //socket.emit('join-room',{})\r\n   const  [socket,setSocket]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        console.log(props.match.params.id);\r\n        console.log('mount it using useEffect!');\r\n        // if (!uuidValidate(props.match.params.id))\r\n        //   {history.push(\"/room-not-found\");}\r\n           // eslint-disable-next-line react-hooks/exhaustive-deps\r\n           const newsocket =  io.connect(\"http://localhost:4000\", {\r\n            query: {\r\n              roomId: props.match.params.id,\r\n              \r\n            },      \r\n          });\r\n          setSocket(newsocket);\r\n          startConnection();\r\n       \r\n      }, []);\r\n\r\n     \r\n\r\n    const videochat=async()=>{\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: { width: 800, height: 300 }\r\n      })\r\n      socket.emit(\"showVideo\",stream);\r\n    \r\n     \r\n      socket.on(\"showVideo\",(stream)=>{\r\n        console.log(\"showing video\");\r\n        const videogrid=document.getElementById('video-grid');\r\n        var video = document.querySelector('video');\r\n        video.srcObject = stream;\r\n        video.addEventListener('loadedmetadata', () => {\r\n        video.play()\r\n        })\r\n        videogrid.append(video);\r\n      })\r\n\r\n           \r\n    }\r\n    \r\n     \r\n   \r\n  \r\n\r\n    return(<div id='video-grid'>\r\n        \r\n        <button onClick={videochat}>start video chat</button>\r\n        <video>Start streaming</video>\r\n    </div>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}