{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Commonroom.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Commonroom() {\n  const startvideo = e => {\n    console.log(\"uploaded\");\n\n    if (e.target.files.length == 0) {\n      console.log(\"empty\");\n    }\n\n    let file = this.files[0]; // const file = document.getElementById(\"uploaded-file\");\n\n    const video = document.getElementById(\"uploaded-video\"); //  var stream = file.captureStream(25);\n    // video.srcObject = stream;\n\n    video.src = URL.createObjectURL(file);\n    video.play().then(() => {\n      // Mozilla currently prefixes the function name, so we have to check for either\n      if (typeof video.mozCaptureStream == \"function\") {\n        window.localVideoStream = video.mozCaptureStream();\n      } else if (typeof video.captureStream == \"function\") {\n        window.localVideoStream = video.captureStream();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*'\",\n      onChange: startvideo,\n      id: \"uploaded-file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"uploaded-video\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Commonroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commonroom\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Commonroom.js"],"names":["React","Commonroom","startvideo","e","console","log","target","files","length","file","video","document","getElementById","src","URL","createObjectURL","play","then","mozCaptureStream","window","localVideoStream","captureStream"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyB,CAA7B,EAAgC;AAC9BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACD,QAAII,IAAI,GAAG,KAAKF,KAAL,CAAW,CAAX,CAAX,CALwB,CAMxB;;AACA,UAAMG,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAd,CAPwB,CAQxB;AACA;;AACAF,IAAAA,KAAK,CAACG,GAAN,GAAYC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAZ;AAEAC,IAAAA,KAAK,CAACM,IAAN,GAAaC,IAAb,CAAkB,MAAM;AACtB;AACA,UAAI,OAAOP,KAAK,CAACQ,gBAAb,IAAiC,UAArC,EAAiD;AAC/CC,QAAAA,MAAM,CAACC,gBAAP,GAA0BV,KAAK,CAACQ,gBAAN,EAA1B;AACD,OAFD,MAEO,IAAI,OAAOR,KAAK,CAACW,aAAb,IAA8B,UAAlC,EAA8C;AACnDF,QAAAA,MAAM,CAACC,gBAAP,GAA0BV,KAAK,CAACW,aAAN,EAA1B;AACD;AACF,KAPD;AAQD,GApBD;;AAqBA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAC,UAFT;AAGE,MAAA,QAAQ,EAAEnB,UAHZ;AAIE,MAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAO,MAAA,EAAE,EAAC,gBAAV;AAA2B,MAAA,QAAQ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAjCuBD,U","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Commonroom() {\r\n  const startvideo = (e) => {\r\n    console.log(\"uploaded\");\r\n    if (e.target.files.length == 0) {\r\n      console.log(\"empty\");\r\n    }\r\n    let file = this.files[0];\r\n    // const file = document.getElementById(\"uploaded-file\");\r\n    const video = document.getElementById(\"uploaded-video\");\r\n    //  var stream = file.captureStream(25);\r\n    // video.srcObject = stream;\r\n    video.src = URL.createObjectURL(file);\r\n\r\n    video.play().then(() => {\r\n      // Mozilla currently prefixes the function name, so we have to check for either\r\n      if (typeof video.mozCaptureStream == \"function\") {\r\n        window.localVideoStream = video.mozCaptureStream();\r\n      } else if (typeof video.captureStream == \"function\") {\r\n        window.localVideoStream = video.captureStream();\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"video/*'\"\r\n        onChange={startvideo}\r\n        id=\"uploaded-file\"\r\n      ></input>\r\n      <video id=\"uploaded-video\" autoPlay></video>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}