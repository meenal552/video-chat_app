{"ast":null,"code":"var util = require('util');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar bind = require('component-bind');\n\nvar IOStream = require('./iostream');\n\nvar parser = require('./parser');\n\nvar debug = require('debug')('socket.io-stream:socket');\n\nvar emit = EventEmitter.prototype.emit;\nvar on = EventEmitter.prototype.on;\nvar slice = Array.prototype.slice;\nexports = module.exports = Socket;\n/**\n * Base event name for messaging.\n *\n * @api public\n */\n\nexports.event = '$stream';\nexports.events = ['error', 'newListener', 'removeListener'];\nutil.inherits(Socket, EventEmitter);\n/**\n * Bidirectional stream socket which wraps Socket.IO.\n *\n * @param {socket.io#Socket} socket.io\n * @api public\n */\n\nfunction Socket(sio, options) {\n  if (!(this instanceof Socket)) {\n    return new Socket(sio, options);\n  }\n\n  EventEmitter.call(this);\n  options = options || {};\n  this.sio = sio;\n  this.forceBase64 = !!options.forceBase64;\n  this.streams = {};\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  var eventName = exports.event;\n  sio.on(eventName, bind(this, emit));\n  sio.on(eventName + '-read', bind(this, '_onread'));\n  sio.on(eventName + '-write', bind(this, '_onwrite'));\n  sio.on(eventName + '-end', bind(this, '_onend'));\n  sio.on(eventName + '-error', bind(this, '_onerror'));\n  sio.on('error', bind(this, emit, 'error'));\n  sio.on('disconnect', bind(this, '_ondisconnect'));\n  this.encoder.on('stream', bind(this, '_onencode'));\n  this.decoder.on('stream', bind(this, '_ondecode'));\n}\n/**\n * Original emit function.\n *\n * @api private\n */\n\n\nSocket.prototype.$emit = emit;\n/**\n * Emits streams to this corresponding server/client.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (type) {\n  if (~exports.events.indexOf(type)) {\n    return emit.apply(this, arguments);\n  }\n\n  this._stream.apply(this, arguments);\n\n  return this;\n};\n\nSocket.prototype.on = function (type, listener) {\n  if (~exports.events.indexOf(type)) {\n    return on.apply(this, arguments);\n  }\n\n  this._onstream(type, listener);\n\n  return this;\n};\n/**\n * Sends a new stream request.\n *\n * @param {String} event type\n * @api private\n */\n\n\nSocket.prototype._stream = function (type) {\n  debug('sending new streams');\n  var self = this;\n  var args = slice.call(arguments, 1);\n  var ack = args[args.length - 1];\n\n  if ('function' == typeof ack) {\n    args[args.length - 1] = function () {\n      var args = slice.call(arguments);\n      args = self.decoder.decode(args);\n      ack.apply(this, args);\n    };\n  }\n\n  args = this.encoder.encode(args);\n  var sio = this.sio;\n  sio.emit.apply(sio, [exports.event, type].concat(args));\n};\n/**\n * Notifies the read event.\n *\n * @api private\n */\n\n\nSocket.prototype._read = function (id, size) {\n  this.sio.emit(exports.event + '-read', id, size);\n};\n/**\n * Requests to write a chunk.\n *\n * @api private\n */\n\n\nSocket.prototype._write = function (id, chunk, encoding, callback) {\n  if (Buffer.isBuffer(chunk)) {\n    if (this.forceBase64) {\n      encoding = 'base64';\n      chunk = chunk.toString(encoding);\n    } else if (!global.Buffer) {\n      // socket.io can't handle Buffer when using browserify.\n      if (chunk.toArrayBuffer) {\n        chunk = chunk.toArrayBuffer();\n      } else {\n        chunk = chunk.buffer;\n      }\n    }\n  }\n\n  this.sio.emit(exports.event + '-write', id, chunk, encoding, callback);\n};\n\nSocket.prototype._end = function (id) {\n  this.sio.emit(exports.event + '-end', id);\n};\n\nSocket.prototype._error = function (id, err) {\n  this.sio.emit(exports.event + '-error', id, err.message || err);\n};\n/**\n * Handles a new stream request.\n *\n * @param {String} event type\n * @param {Function} listener\n *\n * @api private\n */\n\n\nSocket.prototype._onstream = function (type, listener) {\n  if ('function' != typeof listener) {\n    throw TypeError('listener must be a function');\n  }\n\n  function onstream() {\n    debug('new streams');\n    var self = this;\n    var args = slice.call(arguments);\n    var ack = args[args.length - 1];\n\n    if ('function' == typeof ack) {\n      args[args.length - 1] = function () {\n        var args = slice.call(arguments);\n        args = self.encoder.encode(args);\n        ack.apply(this, args);\n      };\n    }\n\n    args = this.decoder.decode(args);\n    listener.apply(this, args);\n  } // for removeListener\n\n\n  onstream.listener = listener;\n  on.call(this, type, onstream);\n};\n\nSocket.prototype._onread = function (id, size) {\n  debug('read: \"%s\"', id);\n  var stream = this.streams[id];\n\n  if (stream) {\n    stream._onread(size);\n  } else {\n    debug('ignore invalid stream id');\n  }\n};\n\nSocket.prototype._onwrite = function (id, chunk, encoding, callback) {\n  debug('write: \"%s\"', id);\n  var stream = this.streams[id];\n\n  if (!stream) {\n    callback('invalid stream id: ' + id);\n    return;\n  }\n\n  if (global.ArrayBuffer && chunk instanceof ArrayBuffer) {\n    // make sure that chunk is a buffer for stream\n    chunk = new Buffer(new Uint8Array(chunk));\n  }\n\n  stream._onwrite(chunk, encoding, callback);\n};\n\nSocket.prototype._onend = function (id) {\n  debug('end: \"%s\"', id);\n  var stream = this.streams[id];\n\n  if (!stream) {\n    debug('ignore non-existent stream id: \"%s\"', id);\n    return;\n  }\n\n  stream._end();\n};\n\nSocket.prototype._onerror = function (id, message) {\n  debug('error: \"%s\", \"%s\"', id, message);\n  var stream = this.streams[id];\n\n  if (!stream) {\n    debug('invalid stream id: \"%s\"', id);\n    return;\n  }\n\n  var err = new Error(message);\n  err.remote = true;\n  stream.emit('error', err);\n};\n\nSocket.prototype._ondisconnect = function () {\n  var stream;\n\n  for (var id in this.streams) {\n    stream = this.streams[id];\n    stream.destroy(); // Close streams when the underlaying\n    // socket.io connection is closed (regardless why)\n\n    stream.emit('close');\n    stream.emit('error', new Error('Connection aborted'));\n  }\n};\n\nSocket.prototype._onencode = function (stream) {\n  if (stream.socket || stream.destroyed) {\n    throw new Error('stream has already been sent.');\n  }\n\n  var id = stream.id;\n\n  if (this.streams[id]) {\n    throw new Error('Encoded stream already exists: ' + id);\n  }\n\n  this.streams[id] = stream;\n  stream.socket = this;\n};\n\nSocket.prototype._ondecode = function (stream) {\n  var id = stream.id;\n\n  if (this.streams[id]) {\n    this._error(id, new Error('Decoded stream already exists: ' + id));\n\n    return;\n  }\n\n  this.streams[id] = stream;\n  stream.socket = this;\n};\n\nSocket.prototype.cleanup = function (id) {\n  delete this.streams[id];\n};","map":{"version":3,"sources":["E:/video_project/client/node_modules/socket.io-stream/lib/socket.js"],"names":["util","require","EventEmitter","bind","IOStream","parser","debug","emit","prototype","on","slice","Array","exports","module","Socket","event","events","inherits","sio","options","call","forceBase64","streams","encoder","Encoder","decoder","Decoder","eventName","$emit","type","indexOf","apply","arguments","_stream","listener","_onstream","self","args","ack","length","decode","encode","concat","_read","id","size","_write","chunk","encoding","callback","Buffer","isBuffer","toString","global","toArrayBuffer","buffer","_end","_error","err","message","TypeError","onstream","_onread","stream","_onwrite","ArrayBuffer","Uint8Array","_onend","_onerror","Error","remote","_ondisconnect","destroy","_onencode","socket","destroyed","_ondecode","cleanup"],"mappings":"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","sourcesContent":["var util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar bind = require('component-bind');\nvar IOStream = require('./iostream');\nvar parser = require('./parser');\nvar debug = require('debug')('socket.io-stream:socket');\nvar emit = EventEmitter.prototype.emit;\nvar on = EventEmitter.prototype.on;\nvar slice = Array.prototype.slice;\n\n\nexports = module.exports = Socket;\n\n/**\n * Base event name for messaging.\n *\n * @api public\n */\nexports.event = '$stream';\n\nexports.events = [\n  'error',\n  'newListener',\n  'removeListener'\n];\n\nutil.inherits(Socket, EventEmitter);\n\n/**\n * Bidirectional stream socket which wraps Socket.IO.\n *\n * @param {socket.io#Socket} socket.io\n * @api public\n */\nfunction Socket(sio, options) {\n  if (!(this instanceof Socket)) {\n    return new Socket(sio, options);\n  }\n\n  EventEmitter.call(this);\n\n  options = options || {};\n\n  this.sio = sio;\n  this.forceBase64 = !!options.forceBase64;\n  this.streams = {};\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n\n  var eventName = exports.event;\n  sio.on(eventName, bind(this, emit));\n  sio.on(eventName + '-read', bind(this, '_onread'));\n  sio.on(eventName + '-write', bind(this, '_onwrite'));\n  sio.on(eventName + '-end', bind(this, '_onend'));\n  sio.on(eventName + '-error', bind(this, '_onerror'));\n  sio.on('error', bind(this, emit, 'error'));\n  sio.on('disconnect', bind(this, '_ondisconnect'));\n\n  this.encoder.on('stream', bind(this, '_onencode'));\n  this.decoder.on('stream', bind(this, '_ondecode'));\n}\n\n/**\n * Original emit function.\n *\n * @api private\n */\nSocket.prototype.$emit = emit;\n\n/**\n * Emits streams to this corresponding server/client.\n *\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.emit = function(type) {\n  if (~exports.events.indexOf(type)) {\n    return emit.apply(this, arguments);\n  }\n  this._stream.apply(this, arguments);\n  return this;\n};\n\nSocket.prototype.on = function(type, listener) {\n  if (~exports.events.indexOf(type)) {\n    return on.apply(this, arguments);\n  }\n\n  this._onstream(type, listener);\n  return this;\n};\n\n/**\n * Sends a new stream request.\n *\n * @param {String} event type\n * @api private\n */\nSocket.prototype._stream = function(type) {\n  debug('sending new streams');\n\n  var self = this;\n  var args = slice.call(arguments, 1);\n  var ack = args[args.length - 1];\n  if ('function' == typeof ack) {\n    args[args.length - 1] = function() {\n      var args = slice.call(arguments);\n      args = self.decoder.decode(args);\n      ack.apply(this, args);\n    };\n  }\n\n  args = this.encoder.encode(args);\n  var sio = this.sio;\n  sio.emit.apply(sio, [exports.event, type].concat(args));\n};\n\n/**\n * Notifies the read event.\n *\n * @api private\n */\nSocket.prototype._read = function(id, size) {\n  this.sio.emit(exports.event + '-read', id, size);\n};\n\n/**\n * Requests to write a chunk.\n *\n * @api private\n */\nSocket.prototype._write = function(id, chunk, encoding, callback) {\n  if (Buffer.isBuffer(chunk)) {\n    if (this.forceBase64) {\n      encoding = 'base64';\n      chunk = chunk.toString(encoding);\n    } else if (!global.Buffer) {\n      // socket.io can't handle Buffer when using browserify.\n      if (chunk.toArrayBuffer) {\n        chunk = chunk.toArrayBuffer();\n      } else {\n        chunk = chunk.buffer;\n      }\n    }\n  }\n  this.sio.emit(exports.event + '-write', id, chunk, encoding, callback);\n};\n\nSocket.prototype._end = function(id) {\n  this.sio.emit(exports.event + '-end', id);\n};\n\nSocket.prototype._error = function(id, err) {\n  this.sio.emit(exports.event + '-error', id, err.message || err);\n};\n\n/**\n * Handles a new stream request.\n *\n * @param {String} event type\n * @param {Function} listener\n *\n * @api private\n */\nSocket.prototype._onstream = function(type, listener) {\n  if ('function' != typeof listener) {\n    throw TypeError('listener must be a function');\n  }\n\n  function onstream() {\n    debug('new streams');\n    var self = this;\n    var args = slice.call(arguments);\n    var ack = args[args.length - 1];\n    if ('function' == typeof ack) {\n      args[args.length - 1] = function() {\n        var args = slice.call(arguments);\n        args = self.encoder.encode(args);\n        ack.apply(this, args);\n      };\n    }\n\n    args = this.decoder.decode(args);\n    listener.apply(this, args);\n  }\n\n  // for removeListener\n  onstream.listener = listener;\n\n  on.call(this, type, onstream);\n};\n\nSocket.prototype._onread = function(id, size) {\n  debug('read: \"%s\"', id);\n\n  var stream = this.streams[id];\n  if (stream) {\n    stream._onread(size);\n  } else {\n    debug('ignore invalid stream id');\n  }\n};\n\nSocket.prototype._onwrite = function(id, chunk, encoding, callback) {\n  debug('write: \"%s\"', id);\n\n  var stream = this.streams[id];\n  if (!stream) {\n    callback('invalid stream id: ' + id);\n    return;\n  }\n\n  if (global.ArrayBuffer && chunk instanceof ArrayBuffer) {\n    // make sure that chunk is a buffer for stream\n    chunk = new Buffer(new Uint8Array(chunk));\n  }\n  stream._onwrite(chunk, encoding, callback);\n};\n\nSocket.prototype._onend = function(id) {\n  debug('end: \"%s\"', id);\n\n  var stream = this.streams[id];\n  if (!stream) {\n    debug('ignore non-existent stream id: \"%s\"', id);\n    return;\n  }\n\n  stream._end();\n};\n\nSocket.prototype._onerror = function(id, message) {\n  debug('error: \"%s\", \"%s\"', id, message);\n\n  var stream = this.streams[id];\n  if (!stream) {\n    debug('invalid stream id: \"%s\"', id);\n    return;\n  }\n\n  var err = new Error(message);\n  err.remote = true;\n  stream.emit('error', err);\n};\n\nSocket.prototype._ondisconnect = function() {\n  var stream;\n  for (var id in this.streams) {\n    stream = this.streams[id];\n    stream.destroy();\n\n    // Close streams when the underlaying\n    // socket.io connection is closed (regardless why)\n    stream.emit('close');\n    stream.emit('error', new Error('Connection aborted'));\n  }\n};\n\nSocket.prototype._onencode = function(stream) {\n  if (stream.socket || stream.destroyed) {\n    throw new Error('stream has already been sent.');\n  }\n\n  var id = stream.id;\n  if (this.streams[id]) {\n    throw new Error('Encoded stream already exists: ' + id);\n  }\n\n  this.streams[id] = stream;\n  stream.socket = this;\n};\n\nSocket.prototype._ondecode = function(stream) {\n  var id = stream.id;\n  if (this.streams[id]) {\n    this._error(id, new Error('Decoded stream already exists: ' + id));\n    return;\n  }\n\n  this.streams[id] = stream;\n  stream.socket = this;\n};\n\nSocket.prototype.cleanup = function(id) {\n  delete this.streams[id];\n};\n\n"]},"metadata":{},"sourceType":"script"}