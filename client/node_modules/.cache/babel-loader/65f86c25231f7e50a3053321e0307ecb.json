{"ast":null,"code":"var _jsxFileName = \"E:\\\\video_project\\\\client\\\\src\\\\Components\\\\Videochatroom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\nimport Peer from \"peerjs\"; //import { validate as uuidValidate } from \"uuid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videochatroom = props => {\n  _s();\n\n  // let socketInstance = useRef(null);\n  const [socket, setSocket] = useState(null);\n  const [peers, addpeers] = useState({});\n  const [mypeerID, setmypeerID] = useState(\"\");\n  const [mystreams, setmystream] = useState(\"\");\n  const [mute, setmute] = useState(true);\n  const [video_icon, setvideo_icon] = useState(true);\n  const [username, setusername] = useState(\"\");\n  useEffect(() => {\n    document.getElementById(\"comment-icon\").style.visibility = \"visible\";\n    const myPeer = new Peer(undefined, {\n      host: \"/\",\n      port: \"3008\"\n    });\n    let mystream = \"\"; //setmypeer(myPeer);\n\n    console.log(props.match.params.id);\n    console.log(\"mount it using useEffect!\");\n    const userName = localStorage.getItem(\"userName\");\n    setusername(userName);\n    const newsocket = io.connect(\"http://localhost:4000\", {\n      query: {\n        roomId: props.match.params.id,\n        userName\n      }\n    });\n    console.log(\"socket id \" + newsocket.id);\n    setSocket(newsocket);\n    props.setsocket(newsocket);\n    myPeer.on(\"open\", id => {\n      console.log(\"user id send to join room \" + id);\n      setmypeerID(id);\n      newsocket.emit(\"join-room\", id);\n    });\n    const myVideo = document.getElementById(\"myvideo\");\n    myVideo.muted = true;\n    console.log(\"alright now \");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      mystream = stream;\n      setmystream(stream);\n      addVideoStream(myVideo, stream);\n      newsocket.on(\"user-connected\", data => {\n        console.log(\"user id received of new user\" + data.id + data.username);\n        setTimeout(connectToNewUser, 1000, data, stream, myPeer, newsocket); // connectToNewUser(userId, stream, myPeer);\n      });\n      newsocket.on(\"user-disconnected\", userId => {\n        console.log(\"userid disconnected \" + userId);\n        const disconnectedVideo = document.getElementById(userId);\n\n        if (userId) {\n          disconnectedVideo.remove();\n        }\n\n        if (peers[userId]) peers[userId].close();\n      });\n      newsocket.on(\"mute-unmute\", data => {\n        if (data.id != myPeer.id) {\n          const peervideo = document.getElementById(data.id);\n          if (data.mute) peervideo.muted = true;else peervideo.muted = false;\n        }\n      });\n      newsocket.on(\"togglestream\", peerid => {\n        if (peerid != myPeer.id) {\n          console.log(\"togglestream\");\n          const peervideo = document.getElementById(peerid);\n          const stream = peervideo.srcObject;\n          const tracks = stream.getTracks();\n          tracks.forEach(track => {\n            if (track.kind == \"video\") {\n              track.stop();\n            }\n          });\n        }\n      });\n      myPeer.on(\"call\", call => {\n        console.log(\"someone calling\");\n        call.answer(stream);\n        const memberid = document.getElementById(call.peer);\n        let video = \"\";\n\n        if (memberid != null) {\n          console.log(\"member if not null \");\n          video = memberid;\n          video.muted = true;\n          call.on(\"stream\", stream => {\n            video.srcObject = stream;\n            video.play();\n          });\n          call.on(\"close\", () => {\n            console.log(\"call closing\");\n            myVideo.remove();\n          });\n        } else {\n          video = document.createElement(\"video\");\n          console.log(\"call.peer \" + call.peer);\n          video.id = call.peer;\n          video.muted = true;\n          let receivedusername = \"\";\n          newsocket.emit(\"getUsername\", call.peer);\n          newsocket.on(\"getUsername\", data => {\n            receivedusername = data;\n            console.log(\"getusername received call \" + receivedusername);\n          });\n          call.on(\"stream\", userVideoStream => {\n            addVideoStream(video, userVideoStream, receivedusername);\n          });\n          call.on(\"close\", () => {\n            console.log(\"call closing\");\n            myVideo.remove();\n          });\n        }\n      });\n    }); // return works like component will unmount\n\n    return () => {\n      newsocket.emit(\"user-disconnected\", myPeer.id);\n      newsocket.removeAllListeners();\n      mystream.getTracks().forEach(function (track) {\n        if (track.readyState == \"live\") {\n          track.stop();\n        }\n      });\n      myPeer.disconnect();\n      document.getElementById(\"comment-icon\").style.visibility = \"hidden\";\n      document.getElementById(\"chatbox\").style.display = \"none\";\n    };\n  }, []);\n\n  const connectToNewUser = async (data, stream, myPeer, socket) => {\n    console.log(\"connecting to newuser! \" + data.username); // socket.emit(\"getUsername\");\n\n    const call = await myPeer.call(data.id, stream); // adding peers flush updates\n\n    console.log(\"peers adding \");\n    addpeers(prevstate => ({ ...prevstate,\n      [data.id]: call\n    }));\n    const video = document.createElement(\"video\");\n    video.id = data.id;\n    video.className = \"peer-videos\";\n    video.muted = true;\n    console.log(\"cALL \" + call + \"peer \" + myPeer.id);\n    if (call === null || call === \"\" || call === undefined) console.log(\"null\");\n    await call.on(\"stream\", userVideoStream => {\n      console.log(\"streaming \");\n      addVideoStream(video, userVideoStream, data.username);\n    });\n  };\n\n  const addVideoStream = async (video, stream, username = \"\") => {\n    console.log(\"adding video stream with id \", video.id);\n    let div;\n    const videoGrid = document.getElementById(\"video-grid\");\n    video.srcObject = stream;\n    await video.addEventListener(\"loadedmetadata\", () => {\n      if (video.id != \"myvideo\") {\n        div = document.createElement(\"div\");\n        div.className = \"self-video\";\n        div.append(video);\n        const span = document.createElement(\"span\");\n        span.className = \"username\";\n        span.innerHTML = username;\n        div.append(span);\n      }\n\n      video.play();\n\n      if (video.id === \"myvideo\") {} else {\n        div.className = \"notself-video\";\n        videoGrid.append(div);\n      }\n    });\n    console.log(\":appending\");\n  };\n\n  const muteunmute = () => {\n    const v = document.getElementById(\"myvideo\");\n    const data = {\n      id: mypeerID\n    };\n\n    if (v.muted) {\n      v.muted = false;\n      data.mute = false;\n      setmute(false);\n    } else {\n      v.muted = true;\n      data.mute = true;\n      setmute(true);\n    }\n\n    console.log(\"mute \" + mypeerID);\n    socket.emit(\"mute-unmute\", data);\n  };\n\n  const togglestream = () => {\n    console.log(\"video icon value \" + video_icon);\n    const myvideo = document.getElementById(\"myvideo\");\n    mystreams.getTracks().forEach(track => {\n      if (track.kind === \"video\") {\n        if (track.readyState == \"live\") {\n          console.log(\":true \");\n          track.stop();\n          setvideo_icon(false);\n          myvideo.src = \"\";\n          myvideo.srcObject = null;\n          socket.emit(\"togglestream\", mypeerID);\n        } else {\n          console.log(\":false\");\n          navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          }).then(stream => {\n            setmystream(stream);\n            const video = document.getElementById(\"myvideo\");\n            video.srcObject = stream;\n            video.addEventListener(\"loadedmetadata\", () => {\n              video.play();\n            });\n            socket.emit(\"getPeers\");\n            socket.on(\"getPeers\", peers => {\n              peers.forEach(peer => {\n                myPeer.call(peer, stream);\n              });\n            });\n          });\n          setvideo_icon(true);\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PEERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"self-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"myvideo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), mute === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: muteunmute,\n          id: \"mute-icon\",\n          className: \"video_chat_icons\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-microphone-slash\",\n            style: {\n              fontSize: \"24px\",\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: muteunmute,\n          id: \"unmute-icon\",\n          className: \"video_chat_icons\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-microphone\",\n            style: {\n              fontSize: \"24px\",\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), video_icon === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglestream,\n          id: \"mute-icon\",\n          className: \"video_chat_icons\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-video\",\n            style: {\n              fontSize: \"24px\",\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglestream,\n          id: \"unmute-icon\",\n          className: \"video_chat_icons\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-video-slash\",\n            style: {\n              fontSize: \"24px\",\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"video-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Videochatroom, \"khz2eIOmaPyK3ibTuiOgrQlVnY4=\");\n\n_c = Videochatroom;\nexport default _c2 = withRouter(Videochatroom);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Videochatroom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/video_project/client/src/Components/Videochatroom.js"],"names":["React","useState","useEffect","io","withRouter","Peer","Videochatroom","props","socket","setSocket","peers","addpeers","mypeerID","setmypeerID","mystreams","setmystream","mute","setmute","video_icon","setvideo_icon","username","setusername","document","getElementById","style","visibility","myPeer","undefined","host","port","mystream","console","log","match","params","id","userName","localStorage","getItem","newsocket","connect","query","roomId","setsocket","on","emit","myVideo","muted","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","data","setTimeout","connectToNewUser","userId","disconnectedVideo","remove","close","peervideo","peerid","srcObject","tracks","getTracks","forEach","track","kind","stop","call","answer","memberid","peer","play","createElement","receivedusername","userVideoStream","removeAllListeners","readyState","disconnect","display","prevstate","className","div","videoGrid","addEventListener","append","span","innerHTML","muteunmute","v","togglestream","myvideo","src","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Peer from \"peerjs\";\r\n\r\n//import { validate as uuidValidate } from \"uuid\";\r\n\r\nconst Videochatroom = (props) => {\r\n  // let socketInstance = useRef(null);\r\n\r\n  const [socket, setSocket] = useState(null);\r\n  const [peers, addpeers] = useState({});\r\n  const [mypeerID, setmypeerID] = useState(\"\");\r\n  const [mystreams, setmystream] = useState(\"\");\r\n  const [mute, setmute] = useState(true);\r\n  const [video_icon, setvideo_icon] = useState(true);\r\n  const [username, setusername] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"comment-icon\").style.visibility = \"visible\";\r\n    const myPeer = new Peer(undefined, {\r\n      host: \"/\",\r\n      port: \"3008\",\r\n    });\r\n    let mystream = \"\";\r\n    //setmypeer(myPeer);\r\n\r\n    console.log(props.match.params.id);\r\n    console.log(\"mount it using useEffect!\");\r\n\r\n    const userName = localStorage.getItem(\"userName\");\r\n    setusername(userName);\r\n    const newsocket = io.connect(\"http://localhost:4000\", {\r\n      query: {\r\n        roomId: props.match.params.id,\r\n        userName,\r\n      },\r\n    });\r\n    console.log(\"socket id \" + newsocket.id);\r\n    setSocket(newsocket);\r\n    props.setsocket(newsocket);\r\n\r\n    myPeer.on(\"open\", (id) => {\r\n      console.log(\"user id send to join room \" + id);\r\n\r\n      setmypeerID(id);\r\n      newsocket.emit(\"join-room\", id);\r\n    });\r\n\r\n    const myVideo = document.getElementById(\"myvideo\");\r\n    myVideo.muted = true;\r\n\r\n    console.log(\"alright now \");\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        mystream = stream;\r\n        setmystream(stream);\r\n        addVideoStream(myVideo, stream);\r\n\r\n        newsocket.on(\"user-connected\", (data) => {\r\n          console.log(\"user id received of new user\" + data.id + data.username);\r\n          setTimeout(connectToNewUser, 1000, data, stream, myPeer, newsocket);\r\n          // connectToNewUser(userId, stream, myPeer);\r\n        });\r\n        newsocket.on(\"user-disconnected\", (userId) => {\r\n          console.log(\"userid disconnected \" + userId);\r\n          const disconnectedVideo = document.getElementById(userId);\r\n          if (userId) {\r\n            disconnectedVideo.remove();\r\n          }\r\n\r\n          if (peers[userId]) peers[userId].close();\r\n        });\r\n        newsocket.on(\"mute-unmute\", (data) => {\r\n          if (data.id != myPeer.id) {\r\n            const peervideo = document.getElementById(data.id);\r\n            if (data.mute) peervideo.muted = true;\r\n            else peervideo.muted = false;\r\n          }\r\n        });\r\n        newsocket.on(\"togglestream\", (peerid) => {\r\n          if (peerid != myPeer.id) {\r\n            console.log(\"togglestream\");\r\n            const peervideo = document.getElementById(peerid);\r\n            const stream = peervideo.srcObject;\r\n            const tracks = stream.getTracks();\r\n            tracks.forEach((track) => {\r\n              if (track.kind == \"video\") {\r\n                track.stop();\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        myPeer.on(\"call\", (call) => {\r\n          console.log(\"someone calling\");\r\n          call.answer(stream);\r\n          const memberid = document.getElementById(call.peer);\r\n          let video = \"\";\r\n          if (memberid != null) {\r\n            console.log(\"member if not null \");\r\n            video = memberid;\r\n            video.muted = true;\r\n            call.on(\"stream\", (stream) => {\r\n              video.srcObject = stream;\r\n              video.play();\r\n            });\r\n            call.on(\"close\", () => {\r\n              console.log(\"call closing\");\r\n              myVideo.remove();\r\n            });\r\n          } else {\r\n            video = document.createElement(\"video\");\r\n            console.log(\"call.peer \" + call.peer);\r\n            video.id = call.peer;\r\n            video.muted = true;\r\n            let receivedusername = \"\";\r\n            newsocket.emit(\"getUsername\", call.peer);\r\n            newsocket.on(\"getUsername\", (data) => {\r\n              receivedusername = data;\r\n              console.log(\"getusername received call \" + receivedusername);\r\n            });\r\n\r\n            call.on(\"stream\", (userVideoStream) => {\r\n              addVideoStream(video, userVideoStream, receivedusername);\r\n            });\r\n\r\n            call.on(\"close\", () => {\r\n              console.log(\"call closing\");\r\n              myVideo.remove();\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n    // return works like component will unmount\r\n    return () => {\r\n      newsocket.emit(\"user-disconnected\", myPeer.id);\r\n      newsocket.removeAllListeners();\r\n\r\n      mystream.getTracks().forEach(function (track) {\r\n        if (track.readyState == \"live\") {\r\n          track.stop();\r\n        }\r\n      });\r\n      myPeer.disconnect();\r\n      document.getElementById(\"comment-icon\").style.visibility = \"hidden\";\r\n      document.getElementById(\"chatbox\").style.display = \"none\";\r\n    };\r\n  }, []);\r\n\r\n  const connectToNewUser = async (data, stream, myPeer, socket) => {\r\n    console.log(\"connecting to newuser! \" + data.username);\r\n    // socket.emit(\"getUsername\");\r\n    const call = await myPeer.call(data.id, stream);\r\n\r\n    // adding peers flush updates\r\n    console.log(\"peers adding \");\r\n    addpeers((prevstate) => ({\r\n      ...prevstate,\r\n      [data.id]: call,\r\n    }));\r\n\r\n    const video = document.createElement(\"video\");\r\n    video.id = data.id;\r\n    video.className = \"peer-videos\";\r\n    video.muted = true;\r\n    console.log(\"cALL \" + call + \"peer \" + myPeer.id);\r\n    if (call === null || call === \"\" || call === undefined) console.log(\"null\");\r\n\r\n    await call.on(\"stream\", (userVideoStream) => {\r\n      console.log(\"streaming \");\r\n      addVideoStream(video, userVideoStream, data.username);\r\n    });\r\n  };\r\n\r\n  const addVideoStream = async (video, stream, username = \"\") => {\r\n    console.log(\"adding video stream with id \", video.id);\r\n    let div;\r\n\r\n    const videoGrid = document.getElementById(\"video-grid\");\r\n\r\n    video.srcObject = stream;\r\n    await video.addEventListener(\"loadedmetadata\", () => {\r\n      if (video.id != \"myvideo\") {\r\n        div = document.createElement(\"div\");\r\n        div.className = \"self-video\";\r\n        div.append(video);\r\n\r\n        const span = document.createElement(\"span\");\r\n        span.className = \"username\";\r\n        span.innerHTML = username;\r\n        div.append(span);\r\n      }\r\n      video.play();\r\n      if (video.id === \"myvideo\") {\r\n      } else {\r\n        div.className = \"notself-video\";\r\n        videoGrid.append(div);\r\n      }\r\n    });\r\n\r\n    console.log(\":appending\");\r\n  };\r\n\r\n  const muteunmute = () => {\r\n    const v = document.getElementById(\"myvideo\");\r\n    const data = {\r\n      id: mypeerID,\r\n    };\r\n    if (v.muted) {\r\n      v.muted = false;\r\n      data.mute = false;\r\n      setmute(false);\r\n    } else {\r\n      v.muted = true;\r\n      data.mute = true;\r\n      setmute(true);\r\n    }\r\n    console.log(\"mute \" + mypeerID);\r\n\r\n    socket.emit(\"mute-unmute\", data);\r\n  };\r\n  const togglestream = () => {\r\n    console.log(\"video icon value \" + video_icon);\r\n    const myvideo = document.getElementById(\"myvideo\");\r\n    mystreams.getTracks().forEach((track) => {\r\n      if (track.kind === \"video\") {\r\n        if (track.readyState == \"live\") {\r\n          console.log(\":true \");\r\n          track.stop();\r\n          setvideo_icon(false);\r\n          myvideo.src = \"\";\r\n          myvideo.srcObject = null;\r\n          socket.emit(\"togglestream\", mypeerID);\r\n        } else {\r\n          console.log(\":false\");\r\n          navigator.mediaDevices\r\n            .getUserMedia({\r\n              video: true,\r\n              audio: true,\r\n            })\r\n            .then((stream) => {\r\n              setmystream(stream);\r\n              const video = document.getElementById(\"myvideo\");\r\n              video.srcObject = stream;\r\n              video.addEventListener(\"loadedmetadata\", () => {\r\n                video.play();\r\n              });\r\n              socket.emit(\"getPeers\");\r\n              socket.on(\"getPeers\", (peers) => {\r\n                peers.forEach((peer) => {\r\n                  myPeer.call(peer, stream);\r\n                });\r\n              });\r\n            });\r\n          setvideo_icon(true);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>PEERS</h2>\r\n      <div className=\"video-main\">\r\n        <div class=\"self-video\">\r\n          <video id=\"myvideo\" />\r\n\r\n          {mute === true ? (\r\n            <button\r\n              onClick={muteunmute}\r\n              id=\"mute-icon\"\r\n              className=\"video_chat_icons\"\r\n            >\r\n              <i\r\n                class=\"fas fa-microphone-slash\"\r\n                style={{ fontSize: \"24px\", color: \"red\" }}\r\n              />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={muteunmute}\r\n              id=\"unmute-icon\"\r\n              className=\"video_chat_icons\"\r\n            >\r\n              <i\r\n                class=\"fas fa-microphone\"\r\n                style={{ fontSize: \"24px\", color: \"red\" }}\r\n              />\r\n            </button>\r\n          )}\r\n          {video_icon === true ? (\r\n            <button\r\n              onClick={togglestream}\r\n              id=\"mute-icon\"\r\n              className=\"video_chat_icons\"\r\n            >\r\n              <i\r\n                class=\"fa fa-video\"\r\n                style={{ fontSize: \"24px\", color: \"red\" }}\r\n              />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={togglestream}\r\n              id=\"unmute-icon\"\r\n              className=\"video_chat_icons\"\r\n            >\r\n              <i\r\n                class=\"fa fa-video-slash\"\r\n                style={{ fontSize: \"24px\", color: \"red\" }}\r\n              />\r\n            </button>\r\n          )}\r\n          <span className=\"username\">{username}</span>\r\n        </div>\r\n\r\n        <div id=\"video-grid\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Videochatroom);\r\n"]},"metadata":{},"sourceType":"module"}